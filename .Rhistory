)
p2 <-
ggplot()+
geom_sf(data = st_as_sf(region), fill = "white")+
geom_point(data = df, aes(x = lon, y = lat, col = CL18_variance_dif), size = 0.8)+
annotate("text", label = "(б)", x = 12850736, y = 6680000, vjust = 0, size = 5, family = "Times New Roman")+
scale_color_viridis_c(name = "Динамика вариации людности\nнас-ных пунктов (2010 к 2002),%")+
coord_sf(crs = pulkovo1942.GK12, datum = NA, ylim = c(6135000, 6640000), clip = 'off')+
theme_bw(base_family = "Arial", base_size = 11)+
theme(axis.title = element_blank(),
axis.text = element_blank(),
panel.grid = element_blank(),
plot.margin=unit(c(1,0.1,0.1,0.1),"cm"),
legend.position = "bottom", legend.box.margin = unit(c(0,0,0,0),"cm"))
fig_5 <- gridExtra::grid.arrange(p1,p2, nrow = 1)
ggsave(plot = fig_5, filename = "Fig5.jpeg", path = "plots/Иллюстрации для статьи/",
dpi = 200, device = "jpeg", width = 21, height = 10.5, units = "cm")
cowplot::ggsave(plot = fig_6, filename = "Fig5.eps", path = "plots/Иллюстрации для статьи/",
width = 21, height = 10.5, units = "cm", device = cairo_ps)
cowplot::ggsave(plot = fig_5, filename = "Fig5.eps", path = "plots/Иллюстрации для статьи/",
width = 21, height = 10.5, units = "cm", device = cairo_ps)
x_ticks <- 80:105
x_ticks[-seq(1, 26, 5)] <- ""
y_ticks <- 100:117
y_ticks[-seq(1,17,5)] <- ""
fig_6 <- clusters_18_metrics %>%
ggplot(aes(x = CL18_pop2010to2002_rel, y = CL18_variance_dif))+
geom_point(aes(size = CL18_pop2002/1000), pch = 1, stroke = 1)+
# geom_point(aes())+
geom_circle(data = data_frame(x = c(90, 98), y = c(112, 104)),
mapping = aes(x0 = x, y0 = y, r = 5.6),
color = "grey70",linetype = "dotted",  alpha = 1,
inherit.aes = F)+
annotate("text", x = 99, y = 108.5, label = "a", size = 5, family = "Times New Roman")+
annotate("text", x = 91, y = 116, label = "б", size = 5,family = "Times New Roman")+
scale_x_continuous(name = "Динамика численности населения, %",
breaks =  80:105, labels = x_ticks)+
scale_y_continuous(name = "Динамики вариации людности\nнаселенных пунктов, %",
breaks =  100:117, labels = y_ticks)+
scale_size_continuous(name = "Численность\nнаселения\n(2002), тыс. чел.",
breaks = c(20, 50, 100, 200, 500), range = c(0.5, 10))+
coord_equal()+
theme_bw(base_size = 12, base_family = "Times New Roman")+
theme(panel.grid = element_blank(),
axis.ticks = element_line(),
plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm"))
# Экспорт
ggsave(plot = fig_6, filename = "Fig6.jpeg", path = "plots/Иллюстрации для статьи/",
dpi = 200, device = "jpeg", width = 18, height = 10, units = "cm")
cowplot::ggsave(plot = fig_6, filename = "Fig6.eps", path = "plots/Иллюстрации для статьи/",
width = 18, height = 11, units = "cm", device = cairo_ps)
library(dplyr)
library(tidyr)
library(corrplot)
library(lme4)
library(stargazer)
library(ggplot2)
library(gridExtra)
library(RColorBrewer)
# Загрузка данных
load(file = "data/Part3_res_dataset.Rdata")
# Define helper fucntion to extract legend from ggplot object
# Source: https://stackoverflow.com/questions/12041042/how-to-plot-just-the-legends-in-ggplot2
g_legend<-function(a.gplot){
tmp <- ggplot_gtable(ggplot_build(a.gplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
legend
}
# Удалим населенные пункты, которые исчезли в результате поглощения городами
df %>%
filter(!(pop2010to2002_rel == 0 & Census2002 > 1000 & MunicipalDistrict == "Тобольский район")) %>%
filter(!(pop2010to2002_rel == 0 & MunicipalDistrict == "Тюменский район")) %>%
# Выделим из набора данных интересующие нас предикторы
dplyr::select(clust_6, clust_18, Census2002, pop2010to2002_rel, starts_with("clo"), starts_with("betw"), -ends_with("w"), - clo) ->
df_cleaned
# Удалим выбросы за пределами 3 медианных абсолютных отклонений
df_cleaned %>%
mutate(dev = pop2010to2002_rel - median(pop2010to2002_rel)) %>%
filter(dev <= 3*mad(pop2010to2002_rel)) %>%
dplyr::select(-dev) -> df_cleaned
# Создадим новую переменную: логарифм численности (2002),
# которая послужит в модели в качестве контрольной
df_cleaned %>%
mutate(logPop = log(Census2002)) ->
df_cleaned
# Приведем метрики центральности к стандартизированному виду
df_cleaned %>%
mutate_at(.vars = vars(clo_CL6, clo_CL18, betw_CL6, betw_CL18), scale) -> df_cleaned
# Проверка предикторов на корреляцию
corr <- cor(df_cleaned %>% select(pop2010to2002_rel, logPop, clo_CL6, clo_CL18, betw_CL6, betw_CL18))
# Проверка предикторов на корреляцию
corr <- cor(df_cleaned %>% dplyr::select(pop2010to2002_rel, logPop, clo_CL6, clo_CL18, betw_CL6, betw_CL18))
# colnames(corr) <- c("Динамика числ. нас-я\n(2010 к 2002),%","log(числ. нас-я, 2002)", "ЦБ(6)", "ЦБ(18)", "ЦП(98)", "ЦП(52)")
# rownames(corr) <- c("Динамика числ. нас-я\n(2010 к 2002),%","log(числ. нас-я, 2002)", "Ц0Б(6)", "ЦБ(18)", "ЦП(98)", "ЦП(52)")
corrplot(corr, method = "number", type = "full", insig = "p-value", col = viridis::inferno(12))
model1 <- lmer(pop2010to2002_rel ~ logPop + clo_CL6 + clo_CL18 + betw_CL18 + (1|clust_6/clust_18) + (0 + clo_CL6|clust_6) + (0 + clo_CL18|clust_18), REML = F, data = df_cleaned)
model2 <- lmer(pop2010to2002_rel ~ logPop + clo_CL6 + clo_CL18 + betw_CL6 + (1|clust_6/clust_18) + (0 + clo_CL6|clust_6) + (0 + clo_CL18|clust_18), REML = F, data = df_cleaned)
# Центральность по близости (6) vs Динамика населения
clo_CL6_vs_popDyn <- df_cleaned %>%
ggplot(aes(y = pop2010to2002_rel, x = clo_CL6, fill = as.factor(clust_6), col = as.factor(clust_6)))+
geom_point(shape = 21, stroke = 0, alpha = 0.4, size = 1.2)+
geom_smooth(method = "glm", se = F)+
geom_hline(aes(yintercept = 100), linetype = "dashed", col = "grey3")+
scale_y_continuous(name = "Динамика числ-и населения (2010 к 2002), %",
limits = c(0, 150),
breaks = seq(0, 140, 10), labels = pop.labels)+
scale_x_continuous(name = "Центральность по близости (6 кластеров)",
breaks = seq(-2, 4, 1))+
scale_fill_manual(name = "Кластер", values = brewer.pal(n = 6, name = "Dark2"))+
scale_colour_manual(name = "Кластер", values = brewer.pal(n = 6, name = "Dark2"))+
theme_bw(base_size = 12, base_family = "Arial")+
theme(panel.grid = element_blank(),
axis.ticks = element_line(),
# legend.position = "bottom",
# legend.direction = "horizontal",
legend.title = element_text(size = 12),
legend.box = "horizontal",
plot.margin=unit(c(0.1,0.1,0.3,0.1),"cm"))+
guides(fill = FALSE)
pop.labels <- seq(0, 140, 10)
pop.labels
y_ticks[-seq(1, 15, 2)]
pop.labels[-seq(1, 15, 2)]
pop.labels[-seq(2, 15, 2)]
pop.labels[-seq(1, 15, 2)] <- ""
# Центральность по близости (6) vs Динамика населения
clo_CL6_vs_popDyn <- df_cleaned %>%
ggplot(aes(y = pop2010to2002_rel, x = clo_CL6, fill = as.factor(clust_6), col = as.factor(clust_6)))+
geom_point(shape = 21, stroke = 0, alpha = 0.4, size = 1.2)+
geom_smooth(method = "glm", se = F)+
geom_hline(aes(yintercept = 100), linetype = "dashed", col = "grey3")+
scale_y_continuous(name = "Динамика числ-и населения (2010 к 2002), %",
limits = c(0, 150),
breaks = seq(0, 140, 10), labels = pop.labels)+
scale_x_continuous(name = "Центральность по близости (6 кластеров)",
breaks = seq(-2, 4, 1))+
scale_fill_manual(name = "Кластер", values = brewer.pal(n = 6, name = "Dark2"))+
scale_colour_manual(name = "Кластер", values = brewer.pal(n = 6, name = "Dark2"))+
theme_bw(base_size = 12, base_family = "Arial")+
theme(panel.grid = element_blank(),
axis.ticks = element_line(),
# legend.position = "bottom",
# legend.direction = "horizontal",
legend.title = element_text(size = 12),
legend.box = "horizontal",
plot.margin=unit(c(0.1,0.1,0.3,0.1),"cm"))+
guides(fill = FALSE)
# Центральность по посредничеству (6) vs Динамика населения
betw_CL6_vs_popDyn <- df_cleaned %>%
ggplot(aes(y = pop2010to2002_rel, x = betw_CL6, col = as.factor(clust_6)))+
geom_point(alpha = 0.4, stroke = 0, size = 1.2)+
geom_smooth(method = "glm", se = F)+
geom_hline(aes(yintercept = 100), linetype = "dashed", col = "grey3")+
scale_y_continuous(name = "Динамика числ-и населения (2010 к 2002), %",
limits = c(0, 150),
breaks = seq(0, 140, 10), labels = pop.labels)+
scale_x_continuous(name = "Центральность по посредничеству",
breaks = seq(-2, 6, 1))+
scale_fill_manual(name = "Кластер", values = brewer.pal(n = 6, name = "Dark2"))+
scale_colour_manual(name = "Кластер", values = brewer.pal(n = 6, name = "Dark2"))+
theme_bw(base_size = 12, base_family = "Arial")+
theme(panel.grid = element_blank(),
axis.ticks = element_line(),
legend.position = "bottom",
# legend.direction = "horizontal",
legend.title = element_text(size = 12),
plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm"))+
guides(colour = guide_legend(title.position = "top", nrow = 1))
# Извлечем легенду
color_legend <- g_legend(betw_CL6_vs_popDyn)
# Совместим графики
par(mar=c(0,0,0,0))
fig_7 <- ggplot()+
coord_equal(xlim = c(0, 10), ylim = c(0, 13), expand = c(0.1,0.1))+
annotation_custom(ggplotGrob(clo_CL6_vs_popDyn +
guides(colour = FALSE)),
xmin = 0, xmax = 10, ymin = 7, ymax = 13)+
annotation_custom(ggplotGrob(betw_CL6_vs_popDyn + guides(colour = FALSE)),
xmin = 0, xmax = 10, ymin = 1, ymax = 7)+
annotation_custom(color_legend,
xmin = 2, xmax = 5, ymin = 0, ymax = 1)+
labs(x = NULL, y = NULL)+
theme_void()+
theme(plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm"))
# Сохраним графики
ggsave(plot = fig_7, filename = "Fig7.jpeg", path = "plots/Иллюстрации для статьи/",
dpi = 200, device = "jpeg", width = 18, height = 22, units = "cm")
cowplot::ggsave(plot = fig_7, filename = "Fig7.eps", path = "plots/Иллюстрации для статьи/",
width = 18, height = 22, units = "cm", device = cairo_ps)
library(sp)
library(raster)
library(dplyr)
library(tidyr)
library(sf)
library(ggplot2)
library(ggthemes)
library(gridExtra)
library(RColorBrewer)
load("data/crs.Rdata")
load("data/settlements.Rdata")
load("data/Part3_res_dataset.Rdata")
# Regional borders in Russia
russia <- shapefile("data/Case region/Russia_AdmDivision/Russia.shp")
# Elevation (ASTER GDEM 2011)
r <- raster("data/Case region/ASTER_GDEM_TyumenProvince.tif")
r_reproj <- projectRaster(from = r, crs = pulkovo1942.GK12)
# Landscape
rivers <- shapefile("data/Case region/Gidrology/Main_rivers.shp") %>%
spTransform(x = ., CRSobj = pulkovo1942.GK12)
roads <- shapefile("data/Case region/MainRoads/Main_roads.shp") %>%
spTransform(x = ., CRSobj = pulkovo1942.GK12)
railRoads <- shapefile("data/Case region/RailWays2/RailWays_lines.shp") %>%
spTransform(x = ., CRSobj = pulkovo1942.GK12)
# Define helper fucntion to extract legend from ggplot object
# Source: https://stackoverflow.com/questions/12041042/how-to-plot-just-the-legends-in-ggplot2
g_legend<-function(a.gplot){
tmp <- ggplot_gtable(ggplot_build(a.gplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
legend
}
# Extract names of the regions
region_names <- russia@data$name_en
# Simplify polygons geometry
russia %>% rgeos::gSimplify(tol = 1000, topologyPreserve = T) -> russia
# Transform CRS
AlbersSiberia <- "+proj=aea +lat_1=52 +lat_2=64 +lat_0=0 +lon_0=105 +x_0=18500000 +y_0=0 +ellps=krass +units=m +towgs84=28,-130,-95,0,0,0,0 +no_defs"
russia %>% spTransform(AlbersSiberia) -> russia
# Plot
russia_plot <- ggplot()+
geom_sf(data = st_as_sf(russia), fill = "white", col = "black", lwd = 0.5)+
geom_sf(data = st_as_sf(russia[which(region_names == "Tyumen Oblast")]),
col = "black", fill = "red", lwd = 0.5)+
coord_sf(crs = AlbersSiberia, datum = NA)+
theme_void()
# Convert Raster object into data-frame
elevation_spdf <- as(r_reproj, "SpatialPixelsDataFrame") %>% as.data.frame()
colnames(elevation_spdf) <- c("value", "x", "y")
# Labels
cities_labels_ru <- data_frame(lon = c(12260298, 12446121, 12520841),
lat = c(6332398, 6430103, 6200085),
label = c("Тюмень", "Тобольск", "Ишим"))
directions_labels_ru <- data_frame(x = c(12690000, 12300000, 12250298, 12680000, 12680000, 12529841),
y = c(6657000, 6240000, 6330000, 6260000, 6193000, 6120000),
label = c("в автономные округа",
"на Курган",
"на Урал",
"на Омск",
"Транссиб",
"в Казахстан"))
# Plot
case_region_plot <- ggplot()+
geom_sf(data = st_as_sf(region), fill = "white", lwd = 0)+
geom_tile(data=elevation_spdf, aes(x=x, y=y, fill=value), alpha=1)+
scale_fill_gradientn(name = "Высота, м",
colours = rev(brewer.pal(5, 'RdYlGn'))[1:4],
limits = c(0, 160),
breaks = c(0, 40, 80, 120, 160),
space = "Lab", na.value = NA, guide = guide_legend(title.position = "top"))+
geom_sf(data = st_as_sf(rivers), col = "steelblue3", lwd = 0.7)+
geom_sf(data = st_as_sf(roads), col = "black", lwd = 0.7)+
geom_sf(data = st_as_sf(railRoads), col = "black", lwd = 0.7, lty = 4)+
geom_point(data = df, aes(x = lon, y = lat, size = Census2002/1000),
pch = 21, col = "black", fill = "white", stroke = 0.7)+
geom_text(data = cities_labels_ru,
aes(x=lon-5000, y=lat+22000, label=label),
family = "Times New Roman",
color = "black", fontface = "bold",
size=4, hjust="right", fill = "white", alpha = 1)+
geom_text(data = directions_labels_ru,
aes(x=x, y=y, label=label),
family = "Times New Roman", hjust = "right",
color = "black", fontface = "bold.italic",
size=3.5)+
scale_size_continuous(name = "Население,\nтыс. чел. (2010)", breaks = c(0.1, 1, 5, 20, 50, 100, 500),
range = c(0.3, 13), labels = c("< 0.1", "1", "5", "20", "50", "100", "> 500"))+
scale_x_continuous(expand = c(.1, .1))+
coord_sf(crs = pulkovo1942.GK12, datum = NA)+
ggsn::scalebar(st_as_sf(region), dist = 50,
location = "bottomleft", dd2km = FALSE,
height = 0.01, st.size = 3)+
theme_minimal(base_family = "Times New Roman", base_size = 12)+
theme(axis.title = element_blank(),
axis.text = element_blank(),
panel.grid = element_blank(),
plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm"))
case_region_plot
ggsave(plot = case_region_plot, filename = "case_region_plot.jpeg", path = "plots/",
dpi = 200, device = "jpeg", width = 18, height = 18, units = "cm")
?brewer.pal
# Plot
case_region_plot <- ggplot()+
# geom_sf(data = st_as_sf(region), fill = "white", lwd = 0)+
geom_tile(data=elevation_spdf, aes(x=x, y=y, fill=value), alpha=1)+
scale_fill_gradientn(name = "Высота, м",
colours = rev(brewer.pal(4, 'Greys')),
limits = c(0, 160),
breaks = c(0, 40, 80, 120, 160),
space = "Lab", na.value = NA, guide = guide_legend(title.position = "top"))+
# geom_sf(data = st_as_sf(rivers), col = "steelblue3", lwd = 0.7)+
# geom_sf(data = st_as_sf(roads), col = "black", lwd = 0.7)+
# geom_sf(data = st_as_sf(railRoads), col = "black", lwd = 0.7, lty = 4)+
geom_point(data = df, aes(x = lon, y = lat, size = Census2002/1000),
pch = 21, col = "black", fill = "white", stroke = 0.7)+
# geom_text(data = cities_labels_ru,
#           aes(x=lon-5000, y=lat+22000, label=label),
#           family = "Arial",
#           color = "black", fontface = "bold",
#           size=4, hjust="right", fill = "white", alpha = 1)+
# geom_text(data = directions_labels_ru,
#            aes(x=x, y=y, label=label),
#            family = "Arial", hjust = "right",
#            color = "black", fontface = "bold.italic",
#            size=3.5)+
scale_size_continuous(name = "Население,\nтыс. чел. (2010)", breaks = c(0.1, 1, 5, 20, 50, 100, 500),
range = c(0.3, 13), labels = c("< 0.1", "1", "5", "20", "50", "100", "> 500"))+
scale_x_continuous(expand = c(.1, .1))+
coord_sf(crs = pulkovo1942.GK12, datum = NA)+
ggsn::scalebar(st_as_sf(region), dist = 50,
location = "bottomleft", dd2km = FALSE,
height = 0.01, st.size = 3)+
theme_minimal(base_family = "Arial", base_size = 12)+
theme(axis.title = element_blank(),
axis.text = element_blank(),
panel.grid = element_blank(),
plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm"))
case_region_plot
ggsave(plot = case_region_plot, filename = "case_region_plot.jpeg", path = "plots/",
dpi = 200, device = "jpeg", width = 18, height = 18, units = "cm")
?aggregate()
?raster::aggregate()
?raster::`aggregate,Raster-method`
test <- r_reproj %>% raster::aggregate(10, fun = "mean")
test
plot(test)
# Convert Raster object into data-frame
elevation_spdf <- as(test, "SpatialPixelsDataFrame") %>% as.data.frame()
colnames(elevation_spdf) <- c("value", "x", "y")
# Plot
case_region_plot <- ggplot()+
# geom_sf(data = st_as_sf(region), fill = "white", lwd = 0)+
geom_tile(data=elevation_spdf, aes(x=x, y=y, fill=value), alpha=1)+
scale_fill_gradientn(name = "Высота, м",
colours = rev(brewer.pal(5, 'RdYlGn'))[1:4],
limits = c(0, 160),
breaks = c(0, 40, 80, 120, 160),
space = "Lab", na.value = NA, guide = guide_legend(title.position = "top"))+
geom_sf(data = st_as_sf(rivers), col = "steelblue3", lwd = 0.7)+
geom_sf(data = st_as_sf(roads), col = "black", lwd = 0.7)+
geom_sf(data = st_as_sf(railRoads), col = "black", lwd = 0.7, lty = 4)+
geom_point(data = df, aes(x = lon, y = lat, size = Census2002/1000),
pch = 21, col = "black", fill = "white", stroke = 0.7)+
geom_text(data = cities_labels_ru,
aes(x=lon-5000, y=lat+22000, label=label),
family = "Arial",
color = "black", fontface = "bold",
size=4, hjust="right", fill = "white", alpha = 1)+
geom_text(data = directions_labels_ru,
aes(x=x, y=y, label=label),
family = "Arial", hjust = "right",
color = "black", fontface = "bold.italic",
size=3.5)+
scale_size_continuous(name = "Население,\nтыс. чел. (2010)", breaks = c(0.1, 1, 5, 20, 50, 100, 500),
range = c(0.3, 13), labels = c("< 0.1", "1", "5", "20", "50", "100", "> 500"))+
scale_x_continuous(expand = c(.1, .1))+
coord_sf(crs = pulkovo1942.GK12, datum = NA)+
ggsn::scalebar(st_as_sf(region), dist = 50,
location = "bottomleft", dd2km = FALSE,
height = 0.01, st.size = 3)+
theme_minimal(base_family = "Arial", base_size = 12)+
theme(axis.title = element_blank(),
axis.text = element_blank(),
panel.grid = element_blank(),
plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm"))
case_region_plot
# Plot
case_region_plot <- ggplot()+
# geom_sf(data = st_as_sf(region), fill = "white", lwd = 0)+
geom_tile(data=elevation_spdf, aes(x=x, y=y, fill=value), alpha=1)+
scale_fill_gradientn(name = "Высота, м",
colours = rev(brewer.pal(5, 'RdYlGn'))[1:4],
limits = c(0, 160),
breaks = c(0, 40, 80, 120, 160),
space = "Lab", na.value = NA, guide = guide_legend(title.position = "top"))+
geom_sf(data = st_as_sf(rivers), col = "steelblue3", lwd = 0.7)+
geom_sf(data = st_as_sf(roads), col = "black", lwd = 0.7)+
geom_sf(data = st_as_sf(railRoads), col = "black", lwd = 0.7, lty = 4)+
geom_point(data = df, aes(x = lon, y = lat, size = Census2002/1000),
pch = 21, col = "black", fill = "white", stroke = 0.7)+
geom_text(data = cities_labels_ru,
aes(x=lon-5000, y=lat+22000, label=label),
family = "Arial",
color = "black", fontface = "bold",
size=4, hjust="right", fill = "white", alpha = 1)+
geom_text(data = directions_labels_ru,
aes(x=x, y=y, label=label),
family = "Arial", hjust = "right",
color = "black", fontface = "italic",
size=3.5)+
scale_size_continuous(name = "Население,\nтыс. чел. (2010)", breaks = c(0.1, 1, 5, 20, 50, 100, 500),
range = c(0.3, 13), labels = c("< 0.1", "1", "5", "20", "50", "100", "> 500"))+
scale_x_continuous(expand = c(.1, .1))+
coord_sf(crs = pulkovo1942.GK12, datum = NA)+
ggsn::scalebar(st_as_sf(region), dist = 50,
location = "bottomleft", dd2km = FALSE,
height = 0.01, st.size = 3)+
theme_minimal(base_family = "Arial", base_size = 12)+
theme(axis.title = element_blank(),
axis.text = element_blank(),
panel.grid = element_blank(),
plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm"))
case_region_plot
# Перепроецируем и снизим разрешение
r_reproj <- projectRaster(from = r, crs = pulkovo1942.GK12) %>% raster::aggregate(8, fun = "mean")
# Convert Raster object into data-frame
elevation_spdf <- as(r_reproj, "SpatialPixelsDataFrame") %>% as.data.frame()
colnames(elevation_spdf) <- c("value", "x", "y")
# Plot
case_region_plot <- ggplot()+
# geom_sf(data = st_as_sf(region), fill = "white", lwd = 0)+
geom_tile(data=elevation_spdf, aes(x=x, y=y, fill=value), alpha=1)+
scale_fill_gradientn(name = "Высота, м",
colours = rev(brewer.pal(5, 'RdYlGn'))[1:4],
limits = c(0, 160),
breaks = c(0, 40, 80, 120, 160),
space = "Lab", na.value = NA, guide = guide_legend(title.position = "top"))+
geom_sf(data = st_as_sf(rivers), col = "steelblue3", lwd = 0.7)+
geom_sf(data = st_as_sf(roads), col = "black", lwd = 0.7)+
geom_sf(data = st_as_sf(railRoads), col = "black", lwd = 0.7, lty = 4)+
geom_point(data = df, aes(x = lon, y = lat, size = Census2002/1000),
pch = 21, col = "black", fill = "white", stroke = 0.7)+
geom_text(data = cities_labels_ru,
aes(x=lon-5000, y=lat+22000, label=label),
family = "Arial",
color = "black", fontface = "bold",
size=4, hjust="right", fill = "white", alpha = 1)+
geom_text(data = directions_labels_ru,
aes(x=x, y=y, label=label),
family = "Arial", hjust = "right",
color = "black", fontface = "italic",
size=3.5)+
scale_size_continuous(name = "Население,\nтыс. чел. (2010)", breaks = c(0.1, 1, 5, 20, 50, 100, 500),
range = c(0.3, 13), labels = c("< 0.1", "1", "5", "20", "50", "100", "> 500"))+
scale_x_continuous(expand = c(.1, .1))+
coord_sf(crs = pulkovo1942.GK12, datum = NA)+
ggsn::scalebar(st_as_sf(region), dist = 50,
location = "bottomleft", dd2km = FALSE,
height = 0.01, st.size = 3)+
theme_minimal(base_family = "Arial", base_size = 12)+
theme(axis.title = element_blank(),
axis.text = element_blank(),
panel.grid = element_blank(),
plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm"))
# Extract legends
fill_legend <- g_legend(case_region_plot +
guides(fill = guide_legend(direction = "horizontal",
title.position = "top",
label.position = "bottom"),
size = FALSE)+
theme(legend.position = 'bottom',
legend.spacing.x = unit(0, "lines"),
legend.key.size = unit(1, 'lines')))
size_legend <- g_legend(case_region_plot +
guides(fill = FALSE,
legend.spacing.y = unit(0, "lines")))
par(mar=c(0,0,0,0))
fig_1 <- ggplot()+
coord_equal(xlim = c(0, 10), ylim = c(0, 10), expand = c(0.1,0.1))+
annotation_custom(ggplotGrob(case_region_plot +
guides(fill = FALSE, size = FALSE)),
xmin = 0, xmax = 10, ymin = 0, ymax = 10)+
annotation_custom(ggplotGrob(russia_plot),
xmin = 0, xmax = 3.5, ymin = 7, ymax = 9)+
annotation_custom(fill_legend,
xmin = 7.1, xmax = 9.1, ymin = 0.5, ymax = 3)+
annotation_custom(size_legend,
xmin = 7.5, xmax = 9, ymin = 2.2, ymax = 6.2)+
labs(x = NULL, y = NULL)+
theme_void()
# Сохраним рисунок
ggsave(plot = fig_1, filename = "Fig1.jpeg", path = "plots/Иллюстрации для статьи/",
dpi = 200, device = "jpeg", width = 18, height = 18, units = "cm")
fig_1 <- ggplot()+
coord_equal(xlim = c(0, 10), ylim = c(0, 10), expand = c(0,0))+
annotation_custom(ggplotGrob(case_region_plot +
guides(fill = FALSE, size = FALSE)),
xmin = 0, xmax = 10, ymin = 0, ymax = 10)+
annotation_custom(ggplotGrob(russia_plot),
xmin = 0, xmax = 3.5, ymin = 7, ymax = 9)+
annotation_custom(fill_legend,
xmin = 7.1, xmax = 9.1, ymin = 0.5, ymax = 3)+
annotation_custom(size_legend,
xmin = 7.5, xmax = 9, ymin = 2.2, ymax = 6.2)+
labs(x = NULL, y = NULL)+
theme_void()
# Сохраним рисунок
ggsave(plot = fig_1, filename = "Fig1.jpeg", path = "plots/Иллюстрации для статьи/",
dpi = 200, device = "jpeg", width = 18, height = 18, units = "cm")
# Сохраним рисунок
ggsave(plot = fig_1, filename = "Fig1.jpeg", path = "plots/Иллюстрации для статьи/",
dpi = 200, device = "jpeg", width = 18, height = 16, units = "cm")
# Сохраним рисунок
ggsave(plot = fig_1, filename = "Fig1.jpeg", path = "plots/Иллюстрации для статьи/",
dpi = 200, device = "jpeg", width = 18, height = 18, units = "cm")
cowplot::ggsave(plot = fig_1, filename = "Fig1.eps", path = "plots/Иллюстрации для статьи/",
width = 18, height = 18, units = "cm", device = cairo_ps)
cowplot::ggsave(plot = fig_1, filename = "Fig1.eps", path = "plots/Иллюстрации для статьи/",
width = 18, height = 17, units = "cm", device = cairo_ps)
# Сохраним рисунок
ggsave(plot = fig_1, filename = "Fig1.jpeg", path = "plots/Иллюстрации для статьи/",
dpi = 200, device = "jpeg", width = 18, height = 17, units = "cm")
