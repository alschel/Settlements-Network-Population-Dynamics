breaks = seq(0, 500, 50),
minor_breaks = seq(0 , 500, 50))+
scale_y_continuous(name = "Динамика числ. нас-я (2010 к 2002), %",
breaks = seq(0, 200, 25), labels = pop.labels)+
theme_bw(base_size = 12, base_family = "Helvetica")+
theme(panel.grid = element_blank(),
axis.ticks = element_line(),
plot.margin=unit(c(0.5,0.5,2,0.5),"cm"),
legend.position = c(0.45, -0.22),
legend.direction = "horizontal",
legend.title = element_text(size = 12),
legend.box = "horizontal")+
guides(fill = FALSE)
ggsave(plot = problematization_plot, filename = "problematization_plot.jpeg",
device = "jpeg", path = "plots/",
dpi = 1200, width = 18, height = 13, units = "cm")
# raw
problematization_plot2 <- df %>%
filter(pop2010to2002_rel < 200) %>%                                # remove outliers
filter(dist2Tyumen < 510000) %>%                                     # remove outliers
filter(!(pop2010to2002_rel == 0 & MunicipalDistrict == "Тюменский район")) %>%
filter(!(pop2010to2002_rel == 0 & MunicipalDistrict == "Тобольский район")) %>%
ggplot(aes(x = dist2Tyumen/1000, y = pop2010to2002_rel))+
geom_point(aes(size = Census2002),
color = "black", alpha = 0.4)+
geom_point(data = df %>%
filter(ShortName %in% rayon_centres$Centre),
mapping = aes(size = Census2002), alpha = 1, fill = "white",
shape = 21, stroke = 0.5, show.legend = T)+
geom_point(data = df %>%
filter(pop2010to2002_rel == 0) %>% filter(dist2Tyumen < 510000),
aes(size = Census2002),
color = "black", alpha = 0.4, show.legend = F)+
geom_hline(aes(yintercept = 100), linetype = "dashed", col = "grey3")+
scale_size_continuous(name = "Население (2002), тыс. чел.",
breaks = rev(c(0, 100, 1000, 5000, 20000, 100000)),
labels = rev(c("< 0.1", "0.1-1", "1-5", "5-20", "20-100", ">100")),
range = c(0.9, 10),
guide = guide_legend(title.position = "top"))+
scale_x_continuous(name = "Расстояние до Тюмени, км",
breaks = seq(0, 500, 50),
minor_breaks = seq(0 , 500, 50))+
scale_y_continuous(name = "Динамика числ. нас-я (2010 к 2002), %",
breaks = seq(0, 200, 25), labels = pop.labels)+
theme_bw(base_size = 12, base_family = "Helvetica")+
theme(panel.grid = element_blank(),
axis.ticks = element_line(),
plot.margin=unit(c(0.5,0.5,2,0.5),"cm"),
legend.position = c(0.45, -0.22),
legend.direction = "horizontal",
legend.title = element_text(size = 12),
legend.box = "horizontal")+
guides(fill = FALSE)
ggsave(plot = problematization_plot2, filename = "problematization_plot2.jpeg",
device = "jpeg", path = "plots/",
dpi = 1200, width = 18, height = 13, units = "cm")
problematization_plot2
# Predicted values
pred_vals_model2_plot <- df %>%
filter(pop2010to2002_rel < 200) %>%                                # remove outliers
filter(dist2Tyumen < 510000) %>%                                     # remove outliers
filter(!(pop2010to2002_rel == 0 & MunicipalDistrict == "Тюменский район")) %>%
filter(!(pop2010to2002_rel == 0 & MunicipalDistrict == "Тобольский район")) %>%
ggplot(aes(x = dist2Tyumen/1000, y = pop2010to2002_rel))+
geom_point(aes(size = Census2002),
color = "black", alpha = 0.4)+
geom_point(data = df %>%
filter(ShortName %in% rayon_centres$Centre),
mapping = aes(size = Census2002), alpha = 1, fill = "white",
shape = 21, stroke = 0.5, show.legend = T)+
geom_point(data = df %>%
filter(pop2010to2002_rel == 0) %>% filter(dist2Tyumen < 510000),
aes(size = Census2002),
color = "black", alpha = 0.4, show.legend = F)+
geom_point(data = preds, aes(x = dist2Tyumen/1000, y = preds2, size = Census2002),
color = "red", alpha = 0.4)+
geom_hline(aes(yintercept = 100), linetype = "dashed", col = "grey3")+
scale_size_continuous(name = "Население (2002), тыс. чел.",
breaks = rev(c(0, 100, 1000, 5000, 20000, 100000)),
labels = rev(c("< 0.1", "0.1-1", "1-5", "5-20", "20-100", ">100")),
range = c(0.9, 10),
guide = guide_legend(title.position = "top"))+
scale_x_continuous(name = "Расстояние до Тюмени, км",
breaks = seq(0, 500, 50),
minor_breaks = seq(0 , 500, 50))+
scale_y_continuous(name = "Динамика числ. нас-я (2010 к 2002), %",
breaks = seq(0, 200, 25), labels = pop.labels)+
theme_bw(base_size = 14, base_family = "Helvetica")+
theme(panel.grid = element_blank(),
axis.ticks = element_line(),
plot.margin=unit(c(0.5,0.5,2,0.5),"cm"),
legend.position = c(0.45, -0.22),
legend.direction = "horizontal",
legend.title = element_text(size = 12),
legend.box = "horizontal")+
guides(fill = FALSE)
ggsave(plot = pred_vals_model2_plot, filename = "pred_vals_model2_plot.jpeg",
device = "jpeg", path = "plots/",
dpi = 1200, width = 18, height = 13, units = "cm")
# Predicted values
pred_vals_model2_plot <- df %>%
filter(pop2010to2002_rel < 200) %>%                                # remove outliers
filter(dist2Tyumen < 510000) %>%                                     # remove outliers
filter(!(pop2010to2002_rel == 0 & MunicipalDistrict == "Тюменский район")) %>%
filter(!(pop2010to2002_rel == 0 & MunicipalDistrict == "Тобольский район")) %>%
ggplot(aes(x = dist2Tyumen/1000, y = pop2010to2002_rel))+
geom_point(aes(size = Census2002),
color = "black", alpha = 0.4)+
geom_point(data = df %>%
filter(ShortName %in% rayon_centres$Centre),
mapping = aes(size = Census2002), alpha = 1, fill = "white",
shape = 21, stroke = 0.5, show.legend = T)+
geom_point(data = df %>%
filter(pop2010to2002_rel == 0) %>% filter(dist2Tyumen < 510000),
aes(size = Census2002),
color = "black", alpha = 0.4, show.legend = F)+
geom_point(data = preds %>% filter(dist2Tyumen < 510000), aes(x = dist2Tyumen/1000, y = preds2, size = Census2002),
color = "red", alpha = 0.4)+
geom_hline(aes(yintercept = 100), linetype = "dashed", col = "grey3")+
scale_size_continuous(name = "Население (2002), тыс. чел.",
breaks = rev(c(0, 100, 1000, 5000, 20000, 100000)),
labels = rev(c("< 0.1", "0.1-1", "1-5", "5-20", "20-100", ">100")),
range = c(0.9, 10),
guide = guide_legend(title.position = "top"))+
scale_x_continuous(name = "Расстояние до Тюмени, км",
breaks = seq(0, 500, 50),
minor_breaks = seq(0 , 500, 50))+
scale_y_continuous(name = "Динамика числ. нас-я (2010 к 2002), %",
breaks = seq(0, 200, 25), labels = pop.labels)+
theme_bw(base_size = 14, base_family = "Helvetica")+
theme(panel.grid = element_blank(),
axis.ticks = element_line(),
plot.margin=unit(c(0.5,0.5,2,0.5),"cm"),
legend.position = c(0.45, -0.22),
legend.direction = "horizontal",
legend.title = element_text(size = 12),
legend.box = "horizontal")+
guides(fill = FALSE)
ggsave(plot = pred_vals_model2_plot, filename = "pred_vals_model2_plot.jpeg",
device = "jpeg", path = "plots/",
dpi = 1200, width = 18, height = 13, units = "cm")
# Predicted values
pred_vals_model2_plot <- df %>%
filter(pop2010to2002_rel < 200) %>%                                # remove outliers
filter(dist2Tyumen < 510000) %>%                                     # remove outliers
filter(!(pop2010to2002_rel == 0 & MunicipalDistrict == "Тюменский район")) %>%
filter(!(pop2010to2002_rel == 0 & MunicipalDistrict == "Тобольский район")) %>%
ggplot(aes(x = dist2Tyumen/1000, y = pop2010to2002_rel))+
geom_point(aes(size = Census2002),
color = "black", alpha = 0.4)+
geom_point(data = df %>%
filter(ShortName %in% rayon_centres$Centre),
mapping = aes(size = Census2002), alpha = 1, fill = "white",
shape = 21, stroke = 0.5, show.legend = T)+
geom_point(data = df %>%
filter(pop2010to2002_rel == 0) %>% filter(dist2Tyumen < 510000),
aes(size = Census2002),
color = "black", alpha = 0.4, show.legend = F)+
geom_point(data = preds %>% filter(dist2Tyumen < 510000), aes(x = dist2Tyumen/1000, y = preds2, size = Census2002),
color = "red", alpha = 0.4)+
geom_hline(aes(yintercept = 100), linetype = "dashed", col = "grey3")+
scale_size_continuous(name = "Население (2002), тыс. чел.",
breaks = rev(c(0, 100, 1000, 5000, 20000, 100000)),
labels = rev(c("< 0.1", "0.1-1", "1-5", "5-20", "20-100", ">100")),
range = c(0.9, 10),
guide = guide_legend(title.position = "top"))+
scale_x_continuous(name = "Расстояние до Тюмени, км",
breaks = seq(0, 500, 50),
minor_breaks = seq(0 , 500, 50))+
scale_y_continuous(name = "Динамика числ. нас-я (2010 к 2002), %",
breaks = seq(0, 200, 25), labels = pop.labels)+
theme_bw(base_size = 12, base_family = "Helvetica")+
theme(panel.grid = element_blank(),
axis.ticks = element_line(),
plot.margin=unit(c(0.5,0.5,2,0.5),"cm"),
legend.position = c(0.45, -0.22),
legend.direction = "horizontal",
legend.title = element_text(size = 12),
legend.box = "horizontal")+
guides(fill = FALSE)
ggsave(plot = pred_vals_model2_plot, filename = "pred_vals_model2_plot.jpeg",
device = "jpeg", path = "plots/",
dpi = 1200, width = 18, height = 13, units = "cm")
# Загрузка данных
load(file = "data/Part3_res_dataset.Rdata")
df$Census2010 %>% mean()
mean(df$Census2010)
median(df$Census2010)
library(dplyr)
library(tidyr)
library(corrplot)
library(lme4)
library(stargazer)
library(ggplot2)
library(gridExtra)
library(RColorBrewer)
# Загрузка данных
load(file = "data/Part3_res_dataset.Rdata")
# Удалим населенные пункты, которые исчезли в результате поглощения городами
df %>%
filter(!(pop2010to2002_rel == 0 & Census2002 > 1000 & MunicipalDistrict == "Тобольский район")) %>%
filter(!(pop2010to2002_rel == 0 & MunicipalDistrict == "Тюменский район")) ->
df_cleaned
# Удалим выбросы за пределами 3 медианных абсолютных отклонений
df_cleaned %>%
mutate(dev = pop2010to2002_rel - median(pop2010to2002_rel)) %>%
filter(dev <= 3*mad(pop2010to2002_rel)) %>%
dplyr::select(-dev) -> df_cleaned
# Создадим новую переменную: логарифм численности (2002),
# которая послужит в модели в качестве контрольной
df_cleaned %>%
mutate(logPop = log(Census2002)) ->
df_cleaned
# Приведем метрики центральности к стандартизированному виду
df_cleaned %>%
mutate_at(.vars = vars(clo_CL6, clo_CL18, betw_CL6, betw_CL18), scale) -> df_cleaned
model1 <- lmer(pop2010to2002_rel ~ logPop + clo_CL6 + clo_CL18 + betw_CL18 + (1|clust_6/clust_18) + (0 + clo_CL6|clust_6) + (0 + clo_CL18|clust_18), REML = F, data = df_cleaned)
model2 <- lmer(pop2010to2002_rel ~ logPop + clo_CL6 + clo_CL18 + betw_CL6 + (1|clust_6/clust_18) + (0 + clo_CL6|clust_6) + (0 + clo_CL18|clust_18), REML = F, data = df_cleaned)
# Создадим data frame с предсказанными значениями
df_cleaned %>%
mutate(preds1 = predict(model1),
preds2 = predict(model2)) -> predsы
# Создадим data frame с предсказанными значениями
df_cleaned %>%
mutate(preds1 = predict(model1),
preds2 = predict(model2)) -> preds
# Y-axis labels
pop.labels <- seq(0, 200, 25)
pop.labels[-seq(1, 9, 2)] <- ''
# Text annotation
cities_labels <- data_frame(x = c(df %>%
filter(ShortName == "г. Тюмень") %>%
pull(dist2Tyumen)/1000,
df %>%
filter(ShortName == "г. Тобольск") %>%
pull(dist2Tyumen)/1000,
df %>%
filter(ShortName == "г. Ишим") %>%
pull(dist2Tyumen)/1000),
y = c(160, 145, 145),
label = c('Тюмень','Тобольск','Ишим'))
rayon_centres <- data_frame(Rayon = unique(df$MunicipalDistrict),
Centre = c("с. Абатское", "с. Армизонское", "с. Аромашево",
"с. Бердюжье", "с. Вагай", "с. Викулово",
"с. Голышманово", "г. Заводоуковск", "с. Исетское",
"г. Ишим", "с. Казанское", "с. Нижняя Тавда",
"с. Омутинское", "с. Сладково", "с. Большое Сорокино",
"г. Тобольск", "г. Тюмень", "с. Уват",
"с. Упорово", "с. Юргинское", "г. Ялуторовск",
"с. Ярково"))
# Predicted values
pred_vals_model2_plot <- df %>%
filter(pop2010to2002_rel < 200) %>%                                # remove outliers
filter(dist2Tyumen < 510000) %>%                                     # remove outliers
filter(!(pop2010to2002_rel == 0 & MunicipalDistrict == "Тюменский район")) %>%
filter(!(pop2010to2002_rel == 0 & MunicipalDistrict == "Тобольский район")) %>%
ggplot(aes(x = dist2Tyumen/1000, y = pop2010to2002_rel))+
geom_point(aes(size = Census2002),
color = "black", alpha = 0.4)+
geom_point(data = df %>%
filter(ShortName %in% rayon_centres$Centre),
mapping = aes(size = Census2002), alpha = 1, fill = "white",
shape = 21, stroke = 0.5, show.legend = T)+
geom_point(data = df %>%
filter(pop2010to2002_rel == 0) %>% filter(dist2Tyumen < 510000),
aes(size = Census2002),
color = "black", alpha = 0.4, show.legend = F)+
geom_point(data = preds %>% filter(dist2Tyumen < 510000), aes(x = dist2Tyumen/1000, y = preds2, size = Census2002),
color = "red", alpha = 0.4)+
geom_hline(aes(yintercept = 100), linetype = "dashed", col = "grey3")+
scale_size_continuous(name = "Население (2002), тыс. чел.",
breaks = rev(c(0, 100, 1000, 5000, 20000, 100000)),
labels = rev(c("< 0.1", "0.1-1", "1-5", "5-20", "20-100", ">100")),
range = c(0.9, 10),
guide = guide_legend(title.position = "top"))+
scale_x_continuous(name = "Расстояние до Тюмени, км",
breaks = seq(0, 500, 50),
minor_breaks = seq(0 , 500, 50))+
scale_y_continuous(name = "Динамика числ. нас-я (2010 к 2002), %",
breaks = seq(0, 200, 25), labels = pop.labels)+
theme_bw(base_size = 12, base_family = "Helvetica")+
theme(panel.grid = element_blank(),
axis.ticks = element_line(),
plot.margin=unit(c(0.5,0.5,2,0.5),"cm"),
legend.position = c(0.45, -0.22),
legend.direction = "horizontal",
legend.title = element_text(size = 12),
legend.box = "horizontal")+
guides(fill = FALSE)
pred_vals_model2_plot
# Predicted values
FigA3 <- df %>%
filter(pop2010to2002_rel < 200) %>%                                # remove outliers
filter(dist2Tyumen < 510000) %>%                                     # remove outliers
filter(!(pop2010to2002_rel == 0 & MunicipalDistrict == "Тюменский район")) %>%
filter(!(pop2010to2002_rel == 0 & MunicipalDistrict == "Тобольский район")) %>%
ggplot(aes(x = dist2Tyumen/1000, y = pop2010to2002_rel))+
geom_point(aes(size = Census2002),
color = "black", alpha = 0.4)+
geom_point(data = df %>%
filter(ShortName %in% rayon_centres$Centre),
mapping = aes(size = Census2002), alpha = 1, fill = "white",
shape = 21, stroke = 0.5, show.legend = T)+
geom_point(data = df %>%
filter(pop2010to2002_rel == 0) %>% filter(dist2Tyumen < 510000),
aes(size = Census2002),
color = "black", alpha = 0.4, show.legend = F)+
geom_point(data = preds %>% filter(dist2Tyumen < 510000), aes(x = dist2Tyumen/1000, y = preds2, size = Census2002),
color = "red", alpha = 0.4)+
geom_hline(aes(yintercept = 100), linetype = "dashed", col = "grey3")+
scale_size_continuous(name = "Население (2002), тыс. чел.",
breaks = rev(c(0, 100, 1000, 5000, 20000, 100000)),
labels = rev(c("< 0.1", "0.1-1", "1-5", "5-20", "20-100", ">100")),
range = c(0.9, 10),
guide = guide_legend(title.position = "top"))+
scale_x_continuous(name = "Расстояние до Тюмени, км",
breaks = seq(0, 500, 50),
minor_breaks = seq(0 , 500, 50))+
scale_y_continuous(name = "Динамика числ. нас-я (2010 к 2002), %",
breaks = seq(0, 200, 25), labels = pop.labels)+
theme_bw(base_size = 12, base_family = "Helvetica")+
theme(panel.grid = element_blank(),
axis.ticks = element_line(),
plot.margin=unit(c(0.5,0.5,2,0.5),"cm"),
legend.position = c(0.45, -0.22),
legend.direction = "horizontal",
legend.title = element_text(size = 12),
legend.box = "horizontal")+
guides(fill = FALSE)
# Y-axis labels
pop.labels <- seq(0, 200, 25)
pop.labels[-seq(1, 9, 2)] <- ''
# Text annotation
cities_labels <- data_frame(x = c(df %>%
filter(ShortName == "г. Тюмень") %>%
pull(dist2Tyumen)/1000,
df %>%
filter(ShortName == "г. Тобольск") %>%
pull(dist2Tyumen)/1000,
df %>%
filter(ShortName == "г. Ишим") %>%
pull(dist2Tyumen)/1000),
y = c(160, 145, 145),
label = c('Тюмень','Тобольск','Ишим'))
rayon_centres <- data_frame(Rayon = unique(df$MunicipalDistrict),
Centre = c("с. Абатское", "с. Армизонское", "с. Аромашево",
"с. Бердюжье", "с. Вагай", "с. Викулово",
"с. Голышманово", "г. Заводоуковск", "с. Исетское",
"г. Ишим", "с. Казанское", "с. Нижняя Тавда",
"с. Омутинское", "с. Сладково", "с. Большое Сорокино",
"г. Тобольск", "г. Тюмень", "с. Уват",
"с. Упорово", "с. Юргинское", "г. Ялуторовск",
"с. Ярково"))
problematization_plot <- df %>%
filter(pop2010to2002_rel < 200) %>%                                # remove outliers
filter(dist2Tyumen < 510000) %>%                                     # remove outliers
filter(!(pop2010to2002_rel == 0 & MunicipalDistrict == "Тюменский район")) %>%
filter(!(pop2010to2002_rel == 0 & MunicipalDistrict == "Тобольский район")) %>%
ggplot(aes(x = dist2Tyumen/1000, y = pop2010to2002_rel))+
geom_point(aes(size = Census2002),
color = "black", alpha = 0.4)+
geom_point(data = df %>%
filter(ShortName %in% rayon_centres$Centre),
mapping = aes(size = Census2002), alpha = 1, fill = "white",
shape = 21, stroke = 0.5, show.legend = T)+
geom_point(data = df %>%
filter(pop2010to2002_rel == 0) %>% filter(dist2Tyumen < 510000),
aes(size = Census2002),
color = "black", alpha = 0.4, show.legend = F)+
stat_smooth(method = "loess", col = "red",
lwd = 0.6, alpha = 1, se = F, span = 0.2)+
geom_text(data = cities_labels,
aes(x=x,y=y,label=label),
color = "black", fontface = "italic",
size=3, hjust=0.5, vjust=0)+
geom_curve(data = data.frame(x=cities_labels$x,
xend=cities_labels$x,
y=cities_labels$y - 5,
yend=cities_labels$y - 30),
aes(x=x,y=y,xend=xend,yend=yend),
color='black', size=.15, curvature = 0,
arrow = arrow(type="closed", length = unit(0.1,"cm")))+
geom_hline(aes(yintercept = 100), linetype = "dashed", col = "grey3")+
scale_size_continuous(name = "Население (2002), тыс. чел.",
breaks = rev(c(0, 100, 1000, 5000, 20000, 100000)),
labels = rev(c("< 0.1", "0.1-1", "1-5", "5-20", "20-100", ">100")),
range = c(0.9, 10),
guide = guide_legend(title.position = "top"))+
scale_x_continuous(name = "Расстояние до Тюмени, км",
breaks = seq(0, 500, 50),
minor_breaks = seq(0 , 500, 50))+
scale_y_continuous(name = "Динамика числ. нас-я (2010 к 2002), %",
breaks = seq(0, 200, 25), labels = pop.labels)+
theme_bw(base_size = 12, base_family = "Helvetica")+
theme(panel.grid = element_blank(),
axis.ticks = element_line(),
plot.margin=unit(c(0.5,0.5,2,0.5),"cm"),
legend.position = c(0.45, -0.22),
legend.direction = "horizontal",
legend.title = element_text(size = 12),
legend.box = "horizontal")+
guides(fill = FALSE)
problematization_plot
library(sp)
library(sf)
library(raster)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(igraph)
library(RColorBrewer)
library(tidyr)
library(viridis)
# load the data
load("data/Part2_output.RData")
# 1.1. Сохраним данные в новую переменную и очистим от лишних столбцов
df <- settlements_2002@data
df %>%
dplyr::select(-Rosstat1981, -cohort1981, -cohort1990, -cohort2002,
-trend_1981to1990, -trend_1990to2002, -trend_2002to2010,
-rel1981to1990, -rel1990to2002, -rel2002to2010) -> df
# Add coordinates of the settlements as new columns
df %>%
mutate(lon = coordinates(settlements_2002)[,1],
lat = coordinates(settlements_2002)[,2]) %>%
dplyr::select(id, lon, lat, ShortName, MunicipalDistrict,
Rosstat1990, Census2002, Census2010, clust_3, clust_6, clust_18) -> df
my_subgraph_function <- function(graph, nodes) {
# 1) сохраним в отдельный вектор номера всех вершин, лежащих между н.п.
# shortest_paths() возвращает именованный list длины @to,
# который содержит индексы всех вершин и ребер каждого пути
all_the_verticies <-
shortest_paths(graph = graph,        # igraph object
from = nodes,         # vertex ids from
to = nodes) %>%       # vertex ids to
.$vpath %>%                          # extract list of returned vertex ids
unlist()                             # unlist
# 2) выборка из графа
induced_subgraph(graph = graph,                        # igraph object
vids = all_the_verticies) %>%         # vertex ids
simplify() ->                                        # remove loop and multiple edges
sub_graph
return(sub_graph)
}
rep.row <-function(x,n){
matrix(rep(x,each=n),nrow=n)
}
rep.col <-function(x,n){
matrix(rep(x,each=n),ncol=n)
}
# 1.4. Define function for normalizing data
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
# ======================================
# 2.1. Descriptive metrics on population
df %>%
group_by(clust_6) %>%
mutate(CL6_n = n(),                                          # Number of settlements
CL6_pop2002 = sum(Census2002),                        # 2002 population
CL6_pop2010 = sum(Census2010),                        # 2010 population общая численность населения
CL6_pop2010to2002_rel = CL6_pop2010/CL6_pop2002*100,  # percentage of 2010-population to 2002-population
CL6_max_pop2002 = max(Census2002),                    # the largest settlement's size
CL6_mean_pop2002 = mean(Census2002),                  # mean settlement's size
CL6_median_pop2002 = median(Census2002)) %>%          # median settlement's size
# select the columns we need
dplyr::select(clust_6, CL6_n, CL6_pop2002, CL6_pop2010, CL6_pop2010to2002_rel,
CL6_max_pop2002, CL6_mean_pop2002, CL6_median_pop2002) %>%
unique() -> clusters_6_metrics    # Save the results into new data.frame
# Создадим переменную
clusters_6_metrics$CL6_density <- NA_real_
# Calculate
for (i in 1:nrow(clusters_6_metrics)) {
# Define logical vector to subset settlements by the cluster
select_condition <- clust_6_2002 == i
# Create subgraph
temp_graph <- my_subgraph_function(res_graph_2002, settl_index_2002[select_condition])
# Calculate edge_density
clusters_6_metrics[clusters_6_metrics$clust_6 == i,]$CL6_density <- edge_density(temp_graph)
}
plot(temp_graph)
?plot.igraph()
plot(temp_graph, size = 1)
plot(temp_graph, size = 0.1)
plot(temp_graph, size2 = 0.1)
library(visNetwork)
plot(temp_graph, vertex.size = 0.1)
i = 1
# ======================================
# 3.1. Descriptive metrics on population
df %>%
group_by(clust_18) %>%
mutate(CL18_n = n(),                                          # Number of settlements
CL18_pop2002 = sum(Census2002),                        # 2002 population
CL18_pop2010 = sum(Census2010),                        # 2010 population общая численность населения
CL18_pop2010to2002_rel = CL18_pop2010/CL18_pop2002*100,  # percentage of 2010-population to 2002-population
CL18_max_pop2002 = max(Census2002),                    # the largest settlement's size
CL18_mean_pop2002 = mean(Census2002),                  # mean settlement's size
CL18_median_pop2002 = median(Census2002)) %>%          # median settlement's size
# select the columns we need
dplyr::select(clust_6, clust_18, CL18_pop2002, CL18_pop2010, CL18_pop2010to2002_rel,
CL18_max_pop2002, CL18_mean_pop2002, CL18_median_pop2002) %>%
unique() -> clusters_18_metrics    # Save the results into new data.frame
select_condition <- clust_18_2002 == i
temp_graph <- my_subgraph_function(res_graph_2002, settl_index_2002[select_condition])
plot(temp_graph)
plot(temp_graph, vertex.size = 1)
i = 12
select_condition <- clust_18_2002 == i
temp_graph <- my_subgraph_function(res_graph_2002, settl_index_2002[select_condition])
plot(temp_graph, vertex.size = 1)
?shortest_paths
