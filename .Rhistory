filter(!(res_pop_to_init_pop == 0 & MunicipalDistrict == "Тобольский район")) %>%
ggplot(aes(x = Dist2Tyumen/1000, y = res_pop_to_init_pop))+
geom_point(aes(size = init_pop, fill = Period),
shape = 21, stroke = 0, color = "black", alpha = 0.4)+
stat_smooth(method = "loess", aes(col = Period),
lwd = 0.6, alpha = 1, se = F, span = 0.2)+
geom_point(data = population_dynamics_trans %>%
filter(ShortName %in% rayon_centres$Centre),
mapping = aes(size = init_pop, color = Period), alpha = 1, fill = "white",
shape = 21, stroke = 0.5, show.legend = T)+
geom_point(data = population_dynamics_trans %>%
filter(res_pop_to_init_pop == 0) %>% filter(Dist2Tyumen < 510000),
aes(size = init_pop, fill = Period),
shape = 21, stroke = 0, color = "black", alpha = 0.4, show.legend = F)+
geom_hline(aes(yintercept = 100), linetype = "dashed", col = "grey3")+
scale_size_continuous(name = "Initial population, '000",
breaks = rev(c(0, 100, 1000, 5000, 20000, 100000)),
labels = rev(c("< 0.1", "0.1-1", "1-5", "5-20", "20-100", ">100")),
range = c(0.9, 10),
guide = guide_legend(title.position = "top"))+
scale_x_continuous(name = "Distance to Tyumen, km",
breaks = seq(0, 500, 50),
minor_breaks = seq(0 , 500, 50))+
scale_y_continuous(name = "% of initial population at end of period",
breaks = seq(0, 200, 25), labels = pop.labels)+
# scale_color_discrete(name = "", guide = guide_legend(nrow = 2))+
# scale_fill_viridis_d(option = "E")+
scale_color_manual(values = pal,
name = "", guide = guide_legend(nrow = 2))+
scale_fill_manual(values = pal)+
geom_text(data = cities_labels,
aes(x=x,y=y,label=label),
color = "black", fontface = "italic",
size=3.5, hjust=0.5, vjust=0)+
geom_curve(data = data.frame(x=cities_labels$x,
xend=cities_labels$x,
y=cities_labels$y - 5,
yend=cities_labels$y - 30),
aes(x=x,y=y,xend=xend,yend=yend),
color='black', size=.15, curvature = 0,
arrow = arrow(type="closed", length = unit(0.1,"cm")))+
theme_bw(base_size = 13, base_family = "Helvetica")+
theme(panel.grid = element_blank(),
axis.ticks = element_line(),
plot.margin=unit(c(0.5,0.5,2,0.5),"cm"),
legend.position = c(0.45, -0.22),
legend.direction = "horizontal",
legend.title = element_text(size = 13),
legend.box = "horizontal")+
guides(fill = FALSE)
load("data/res_dataset.Rdata")
load("data/Part3_res_dataset.Rdata")
library(sp)
library(sf)
library(raster)
library(rgdal)
library(dplyr)
library(ggplot2)
library(ggrepel)
library(gridExtra)
library(RColorBrewer)
library(ggdendro)
# load the data
load("data/Part1_output.RData")
# Define helper function to extract legend from ggplot object
# Source: https://stackoverflow.com/questions/12041042/how-to-plot-just-the-legends-in-ggplot2
g_legend<-function(a.gplot){
tmp <- ggplot_gtable(ggplot_build(a.gplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
legend
}
# Модель (Ward Hierarchical Clustering)
fit_2002 <- dist_matrix_2002 %>%
as.dist(diag = F) %>%
hclust(method="ward.D")
# Обрежем дерево 2002 года и извлечем номера кластеров
clust_3_2002 <- cutree(fit_2002, k=3)
clust_6_2002 <- cutree(fit_2002, k=6)
clust_18_2002 <- cutree(fit_2002, k = 18)
# Извлечем данные из модели и преобразуем в формат ggdendro
dendro_2002 <- as.dendrogram(fit_2002) %>% dendro_data(type = "rectangle")
# Покажем дерево без выделения кластеров
raw_dendrogram <-
my_dendro %>%
ggplot()+
geom_segment(aes(x=x, y=y , xend = xend, yend = yend))+
scale_y_continuous(name = element_blank(), trans = "sqrt")+  # трансформируем шкалу y
theme_minimal(base_family = "Arial", base_size = 12)+
theme(panel.grid = element_blank(),
axis.title.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text = element_blank(),
plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm"))
# Извлечем информацию о принадлежности отдельных наблюдений к кластерам и создадим ключи,
# по которым будем красить сегменты дерева в ggplot
dendro_2002$label %>%
mutate(label = as.character(label) %>% as.integer()) %>%
arrange(label) %>%
mutate(clust_6 = clust_6_2002,
clust_18 = clust_18_2002) %>% arrange(x) -> key
key %>%
group_by(clust_18) %>%
summarise(min(x), max(x), mean(x)) -> keys_18
dendro_2002
# Покажем дерево без выделения кластеров
raw_dendrogram <-
dendro_2002 %>%
ggplot()+
geom_segment(aes(x=x, y=y , xend = xend, yend = yend))+
scale_y_continuous(name = element_blank(), trans = "sqrt")+  # трансформируем шкалу y
theme_minimal(base_family = "Arial", base_size = 12)+
theme(panel.grid = element_blank(),
axis.title.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text = element_blank(),
plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm"))
key %>%
group_by(clust_18) %>%
summarise(min(x), max(x), mean(x)) -> keys_18
key %>%
group_by(clust_6) %>%
summarise(min(x), max(x), mean(x)) -> keys_6
# Создадим переменную с номером одного из 18 кластеров
segment(dendro_2002) %>%
mutate(clust_18 = NA_integer_) -> my_dendro
for(i in 1:18) {
my_dendro[my_dendro$y < 2550000 & my_dendro$x >= keys_18$`min(x)`[i] & my_dendro$x <= keys_18$`max(x)`[i], 5] <- i
}
# Покажем дерево без выделения кластеров
raw_dendrogram <-
my_dendro %>%
ggplot()+
geom_segment(aes(x=x, y=y , xend = xend, yend = yend))+
scale_y_continuous(name = element_blank(), trans = "sqrt")+  # трансформируем шкалу y
theme_minimal(base_family = "Arial", base_size = 12)+
theme(panel.grid = element_blank(),
axis.title.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text = element_blank(),
plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm"))
raw_dendrogram
# Лейблы 3 кластеров
labels <- data_frame(label = c("Ишим", "Тобольск", "Тюмень"),
x = c(188, 675, 1015),
y = rep(35000000, 3))
# Строим дендрограмму
dendrogram <-
my_dendro %>%
ggplot()+
geom_segment(aes(x=x, y=y , xend = xend, yend = yend, col = as.factor(clust_18)), show.legend = F)+
geom_rect(data = keys_6, aes(xmin=`min(x)`, xmax=`max(x)`, ymin=0, ymax=11000000),
col = "grey30", alpha = 0, lty = "dashed")+
geom_text(data = keys_6,
aes(label = clust_6, x = `max(x)` - 50, y = 9000000),
family = "Arial",
color = "grey30", fontface = "bold")+
geom_text_repel(data = labels, aes(label = label, x = x, y= y), angle = 90, direction = "x")+
annotate("text", x = 1300, y = 100000000, label = "(a)", size = 5, family = "Arial")+
scale_y_continuous(name = element_blank(), trans = "sqrt")+  # трансформируем шкалу y
scale_x_continuous(name = element_blank(), labels = 1:18, breaks = keys_18$`mean(x)`)+
scale_colour_manual(values = c(brewer.pal(n = 8, name = "Dark2"), brewer.pal(10, "Paired")), na.value = "black")+
theme_minimal(base_family = "Arial", base_size = 12)+
theme(panel.grid = element_blank(),
axis.ticks.x = element_line(),
# axis.line.x = element_line(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm"))
dendrogram
# Создадим таблицу с данными по н.п. для визуализации кластеров
settlements <- data_frame(id = settlements_2002@data$id,
Population = settlements_2002@data$Census2002,
clust_3 = clust_3_2002,
clust_6 = clust_6_2002,
clust_18 = clust_18_2002,
Lon = coordinates(settlements_2002)[,1],
Lat = coordinates(settlements_2002)[,2])
# ==========
# 3 кластера
cities_labels_ru <- data_frame(lon = c(12300298, 12450121, 12549841),
lat = c(6332398, 6440103, 6224085),
label = c("Тюмень", "Тобольск", "Ишим"))
clust_3_plot <-
ggplot()+
geom_sf(data = st_as_sf(region), col = "grey30", lwd = 0.4, alpha = 0)+
geom_sf(data = st_as_sf(roads_fixed), col = "grey40", lwd = 0.5, show.legend = F)+
geom_point(data = settlements, aes(x = Lon, y = Lat,
size = Population/1000,
col = factor(clust_3)), alpha = 0.6, show.legend = F)+
scale_colour_manual(values = brewer.pal(n = 3, name = "Dark2"))+
geom_text_repel(data = cities_labels_ru, aes(label = label, x = lon, y= lat),family = "Arial",
color = "black", direction = "x")+
annotate("text", x = 12900000, y = 6640000, label = "(б)", size = 5, family = "Arial")+
scale_size_continuous(breaks = c(0.1, 1, 5, 20, 50, 100, 500),
range = c(0.2, 10),
labels = c("<= 0.1", "1", "5", "20", "50", "100", ">= 500"))+
coord_sf(crs = pulkovo1942.GK12, datum = NA)+
theme_void(base_size = 12, base_family = "Arial")
clust_3_plot
# ===========
# 6 кластеров
settlements %>%
group_by(clust_6) %>% summarise(x_mean = mean(Lon), y_mean = mean(Lat)) -> cluster_6_notations
clust_6_plot <-
ggplot()+
geom_sf(data = st_as_sf(hydr_lines), col = "grey40", lwd = 0.3, alpha = 0.8)+
geom_sf(data = st_as_sf(hydr_polygons), fill = "grey40", alpha = 0.8, col = "grey", lwd = 0.4)+
geom_sf(data = st_as_sf(region), col = "grey30", lwd = 0.4, alpha = 0)+
geom_point(data = settlements, aes(x = Lon, y = Lat, size = Population/1000,
col = factor(clust_6)), alpha = 0.6, show.legend = F)+
geom_text(data = cluster_6_notations,
aes(label = clust_6, x = x_mean, y = y_mean),
family = "Arial",
color = "black")+
annotate("text", x = 12900000, y = 6640000, label = "(в)", size = 5, family = "Arial")+
scale_colour_manual(values = brewer.pal(n = 6, name = "Dark2"))+
scale_size_continuous(name = "Население,\nтыс. чел.", breaks = c(0.1, 1, 5, 20, 50, 100, 500),
range = c(0.2, 10),
labels = c("<= 0.1", "1", "5", "20", "50", "100", ">= 500"))+
coord_sf(crs = pulkovo1942.GK12, datum = NA)+
theme_void(base_size = 12, base_family = "Arial")
# Чтобы добавить номер кластера на карту, вычислим расположение географического центра
# для каждого кластера
settlements %>%
group_by(clust_18) %>% summarise(x_mean = mean(Lon), y_mean = mean(Lat)) -> cluster_18_notations
clust_18_plot <- ggplot()+
geom_sf(data=st_as_sf(rayons), fill = "white", col = "grey40")+
geom_sf(data = st_as_sf(region), col = "grey30", lwd = 0.4, alpha = 0)+
geom_point(data = settlements, aes(x = Lon, y = Lat, size = Population/1000,
col = factor(clust_18)), show.legend = F, alpha = 0.6)+
geom_text(data = cluster_18_notations,
aes(label = clust_18, x = x_mean, y = y_mean),
family = "Arial",
color = "black")+
annotate("text", x = 12900000, y = 6640000, label = "(г)", size = 5, family = "Arial")+
scale_colour_manual(values = c(brewer.pal(n = 8, name = "Dark2"), brewer.pal(10, "Paired")))+
scale_size_continuous(name = "Население,\nтыс. чел.", breaks = c(0.1, 1, 5, 20, 50, 100, 500),
labels = c("<= 0.1", "1", "5", "20", "50", "100", ">= 500"),
range = c(0.2, 10))+
coord_sf(crs = pulkovo1942.GK12, datum = NA)+
theme_void(base_size = 12, base_family = "Arial")
# =================
# Совместим рисунки
par(mar=c(0,0,0,0))
fig_4 <- ggplot()+
coord_equal(xlim = c(0, 24.2), ylim = c(0, 18), expand = c(0, 0))+
annotation_custom(ggplotGrob(dendrogram),
xmin = 0, xmax = 13, ymin = 9, ymax = 18)+
annotation_custom(ggplotGrob(clust_3_plot),
xmin = 12.2, xmax = 24.2, ymin = 9, ymax = 18)+
annotation_custom(ggplotGrob(clust_6_plot),
xmin = 0, xmax = 13, ymin = 0, ymax = 9)+
annotation_custom(ggplotGrob(clust_18_plot),
xmin = 12.2, xmax = 24.2, ymin = 0, ymax = 9)+
labs(x = NULL, y = NULL)+
theme_void()
# Сохраним рисунок
ggsave(plot = fig_4, filename = "Fig4.jpeg", path = "plots/Иллюстрации для статьи/",
dpi = 200, device = "jpeg", width = 24.2, height = 18, units = "cm")
cowplot::ggsave(plot = fig_4, filename = "Fig4.eps", path = "plots/Иллюстрации для статьи/",
width = 24.2, height = 18, units = "cm", device = cairo_ps)
library(sp)
library(sf)
library(raster)
library(rgdal)
library(dplyr)
library(ggplot2)
library(ggrepel)
library(gridExtra)
library(RColorBrewer)
library(ggdendro)
# Модель (Ward Hierarchical Clustering)
fit_2002 <- dist_matrix_2002 %>%
as.dist(diag = F) %>%
hclust(method="ward.D")
# load the data
load("data/Part1_output.RData")
# Модель (Ward Hierarchical Clustering)
fit_2002 <- dist_matrix_2002 %>%
as.dist(diag = F) %>%
hclust(method="ward.D")
# Обрежем дерево 2002 года и извлечем номера кластеров
clust_3_2002 <- cutree(fit_2002, k=3)
clust_6_2002 <- cutree(fit_2002, k=6)
clust_18_2002 <- cutree(fit_2002, k = 18)
# Извлечем данные из модели и преобразуем в формат ggdendro
dendro_2002 <- as.dendrogram(fit_2002) %>% dendro_data(type = "rectangle")
# Извлечем информацию о принадлежности отдельных наблюдений к кластерам и создадим ключи,
# по которым будем красить сегменты дерева в ggplot
dendro_2002$label %>%
mutate(label = as.character(label) %>% as.integer()) %>%
arrange(label) %>%
mutate(clust_6 = clust_6_2002,
clust_18 = clust_18_2002) %>% arrange(x) -> key
key %>%
group_by(clust_18) %>%
summarise(min(x), max(x), mean(x)) -> keys_18
key %>%
group_by(clust_6) %>%
summarise(min(x), max(x), mean(x)) -> keys_6
# Создадим переменную с номером одного из 18 кластеров
segment(dendro_2002) %>%
mutate(clust_18 = NA_integer_) -> my_dendro
for(i in 1:18) {
my_dendro[my_dendro$y < 2550000 & my_dendro$x >= keys_18$`min(x)`[i] & my_dendro$x <= keys_18$`max(x)`[i], 5] <- i
}
# Дерево без выделения кластеров
raw_dendrogram <-
my_dendro %>%
ggplot()+
geom_segment(aes(x=x, y=y , xend = xend, yend = yend))+
scale_y_continuous(name = element_blank(), trans = "sqrt")+  # трансформируем шкалу y
theme_minimal(base_family = "Arial", base_size = 12)+
theme(panel.grid = element_blank(),
axis.title.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text = element_blank(),
plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm"))
# Лейблы 3 кластеров
labels <- data_frame(label = c("Ишим", "Тобольск", "Тюмень"),
x = c(188, 675, 1015),
y = rep(35000000, 3))
# Строим дендрограмму
dendrogram <-
my_dendro %>%
ggplot()+
geom_segment(aes(x=x, y=y , xend = xend, yend = yend, col = as.factor(clust_18)), show.legend = F)+
geom_rect(data = keys_6, aes(xmin=`min(x)`, xmax=`max(x)`, ymin=0, ymax=11000000),
col = "grey30", alpha = 0, lty = "dashed")+
geom_text(data = keys_6,
aes(label = clust_6, x = `max(x)` - 50, y = 9000000),
family = "Arial",
color = "grey30", fontface = "bold")+
geom_text_repel(data = labels, aes(label = label, x = x, y= y), angle = 90, direction = "x")+
annotate("text", x = 1300, y = 100000000, label = "(a)", size = 5, family = "Arial")+
scale_y_continuous(name = element_blank(), trans = "sqrt")+  # трансформируем шкалу y
scale_x_continuous(name = element_blank(), labels = 1:18, breaks = keys_18$`mean(x)`)+
scale_colour_manual(values = c(brewer.pal(n = 8, name = "Dark2"), brewer.pal(10, "Paired")), na.value = "black")+
theme_minimal(base_family = "Arial", base_size = 12)+
theme(panel.grid = element_blank(),
axis.ticks.x = element_line(),
# axis.line.x = element_line(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm"))
dendrogram
# Создадим таблицу с данными по н.п. для визуализации кластеров
settlements <- data_frame(id = settlements_2002@data$id,
Population = settlements_2002@data$Census2002,
clust_3 = clust_3_2002,
clust_6 = clust_6_2002,
clust_18 = clust_18_2002,
Lon = coordinates(settlements_2002)[,1],
Lat = coordinates(settlements_2002)[,2])
# ==========
# 3 кластера
cities_labels_ru <- data_frame(lon = c(12300298, 12450121, 12549841),
lat = c(6332398, 6440103, 6224085),
label = c("Тюмень", "Тобольск", "Ишим"))
clust_3_plot <-
ggplot()+
geom_sf(data = st_as_sf(region), col = "grey30", lwd = 0.4, alpha = 0)+
geom_sf(data = st_as_sf(roads_fixed), col = "grey40", lwd = 0.5, show.legend = F)+
geom_point(data = settlements, aes(x = Lon, y = Lat,
size = Population/1000,
col = factor(clust_3)), alpha = 0.6, show.legend = F)+
scale_colour_manual(values = brewer.pal(n = 3, name = "Dark2"))+
geom_text_repel(data = cities_labels_ru, aes(label = label, x = lon, y= lat),family = "Arial",
color = "black", direction = "x")+
annotate("text", x = 12900000, y = 6640000, label = "(б)", size = 5, family = "Arial")+
scale_size_continuous(breaks = c(0.1, 1, 5, 20, 50, 100, 500),
range = c(0.2, 10),
labels = c("<= 0.1", "1", "5", "20", "50", "100", ">= 500"))+
coord_sf(crs = pulkovo1942.GK12, datum = NA)+
theme_void(base_size = 12, base_family = "Arial")
# ===========
# 6 кластеров
settlements %>%
group_by(clust_6) %>% summarise(x_mean = mean(Lon), y_mean = mean(Lat)) -> cluster_6_notations
clust_6_plot <-
ggplot()+
geom_sf(data = st_as_sf(hydr_lines), col = "grey40", lwd = 0.3, alpha = 0.8)+
geom_sf(data = st_as_sf(hydr_polygons), fill = "grey40", alpha = 0.8, col = "grey", lwd = 0.4)+
geom_sf(data = st_as_sf(region), col = "grey30", lwd = 0.4, alpha = 0)+
geom_point(data = settlements, aes(x = Lon, y = Lat, size = Population/1000,
col = factor(clust_6)), alpha = 0.6, show.legend = F)+
geom_text(data = cluster_6_notations,
aes(label = clust_6, x = x_mean, y = y_mean),
family = "Arial",
color = "black")+
annotate("text", x = 12900000, y = 6640000, label = "(в)", size = 5, family = "Arial")+
scale_colour_manual(values = brewer.pal(n = 6, name = "Dark2"))+
scale_size_continuous(name = "Население,\nтыс. чел.", breaks = c(0.1, 1, 5, 20, 50, 100, 500),
range = c(0.2, 10),
labels = c("<= 0.1", "1", "5", "20", "50", "100", ">= 500"))+
coord_sf(crs = pulkovo1942.GK12, datum = NA)+
theme_void(base_size = 12, base_family = "Arial")
# Чтобы добавить номер кластера на карту, вычислим расположение географического центра
# для каждого кластера
settlements %>%
group_by(clust_18) %>% summarise(x_mean = mean(Lon), y_mean = mean(Lat)) -> cluster_18_notations
clust_18_plot <- ggplot()+
geom_sf(data=st_as_sf(rayons), fill = "white", col = "grey40")+
geom_sf(data = st_as_sf(region), col = "grey30", lwd = 0.4, alpha = 0)+
geom_point(data = settlements, aes(x = Lon, y = Lat, size = Population/1000,
col = factor(clust_18)), show.legend = F, alpha = 0.6)+
geom_text(data = cluster_18_notations,
aes(label = clust_18, x = x_mean, y = y_mean),
family = "Arial",
color = "black")+
annotate("text", x = 12900000, y = 6640000, label = "(г)", size = 5, family = "Arial")+
scale_colour_manual(values = c(brewer.pal(n = 8, name = "Dark2"), brewer.pal(10, "Paired")))+
scale_size_continuous(name = "Население,\nтыс. чел.", breaks = c(0.1, 1, 5, 20, 50, 100, 500),
labels = c("<= 0.1", "1", "5", "20", "50", "100", ">= 500"),
range = c(0.2, 10))+
coord_sf(crs = pulkovo1942.GK12, datum = NA)+
theme_void(base_size = 12, base_family = "Arial")
clust_6_plot <-
ggplot()+
geom_sf(data = st_as_sf(hydr_lines), col = "grey40", lwd = 0.3, alpha = 0.8)+
geom_sf(data = st_as_sf(hydr_polygons), fill = "grey40", alpha = 0.8, col = "grey", lwd = 0.4)+
geom_sf(data = st_as_sf(region), col = "grey30", lwd = 0.4, alpha = 0)+
geom_point(data = settlements, aes(x = Lon, y = Lat, size = Population/1000,
col = factor(clust_6)), alpha = 0.6, show.legend = F)+
# geom_text(data = cluster_6_notations,
#           aes(label = clust_6, x = x_mean, y = y_mean),
#           family = "Arial",
#           color = "black")+
annotate("text", x = 12900000, y = 6640000, label = "(в)", size = 5, family = "Arial")+
scale_colour_manual(values = brewer.pal(n = 6, name = "Dark2"))+
scale_size_continuous(name = "Население,\nтыс. чел.", breaks = c(0.1, 1, 5, 20, 50, 100, 500),
range = c(0.2, 10),
labels = c("<= 0.1", "1", "5", "20", "50", "100", ">= 500"))+
coord_sf(crs = pulkovo1942.GK12, datum = NA)+
theme_void(base_size = 12, base_family = "Arial")
clust_18_plot <- ggplot()+
geom_sf(data=st_as_sf(rayons), fill = "white", col = "grey40")+
geom_sf(data = st_as_sf(region), col = "grey30", lwd = 0.4, alpha = 0)+
geom_point(data = settlements, aes(x = Lon, y = Lat, size = Population/1000,
col = factor(clust_18)), show.legend = F, alpha = 0.6)+
# geom_text(data = cluster_18_notations,
#           aes(label = clust_18, x = x_mean, y = y_mean),
#           family = "Arial",
#           color = "black")+
annotate("text", x = 12900000, y = 6640000, label = "(г)", size = 5, family = "Arial")+
scale_colour_manual(values = c(brewer.pal(n = 8, name = "Dark2"), brewer.pal(10, "Paired")))+
scale_size_continuous(name = "Население,\nтыс. чел.", breaks = c(0.1, 1, 5, 20, 50, 100, 500),
labels = c("<= 0.1", "1", "5", "20", "50", "100", ">= 500"),
range = c(0.2, 10))+
coord_sf(crs = pulkovo1942.GK12, datum = NA)+
theme_void(base_size = 12, base_family = "Arial")
# =================
# Совместим рисунки
par(mar=c(0,0,0,0))
fig_4 <- ggplot()+
coord_equal(xlim = c(0, 24.2), ylim = c(0, 18), expand = c(0, 0))+
annotation_custom(ggplotGrob(dendrogram),
xmin = 0, xmax = 13, ymin = 9, ymax = 18)+
annotation_custom(ggplotGrob(clust_3_plot),
xmin = 12.2, xmax = 24.2, ymin = 9, ymax = 18)+
annotation_custom(ggplotGrob(clust_6_plot),
xmin = 0, xmax = 13, ymin = 0, ymax = 9)+
annotation_custom(ggplotGrob(clust_18_plot),
xmin = 12.2, xmax = 24.2, ymin = 0, ymax = 9)+
labs(x = NULL, y = NULL)+
theme_void()
cowplot::ggsave(plot = fig_4, filename = "Fig4.eps", path = "plots/Иллюстрации для статьи/",
width = 24.2, height = 18, units = "cm", device = cairo_ps)
clust_3_plot <-
ggplot()+
geom_sf(data = st_as_sf(region), col = "grey30", lwd = 0.4, alpha = 0)+
geom_sf(data = st_as_sf(roads_fixed), col = "grey40", lwd = 0.5, show.legend = F)+
geom_point(data = settlements, aes(x = Lon, y = Lat,
size = Population/1000,
col = factor(clust_3)), alpha = 0.6, show.legend = F)+
scale_colour_manual(values = brewer.pal(n = 3, name = "Dark2"))+
# geom_text_repel(data = cities_labels_ru, aes(label = label, x = lon, y= lat),family = "Arial",
#                           color = "black", direction = "x")+
annotate("text", x = 12900000, y = 6640000, label = "(б)", size = 5, family = "Arial")+
scale_size_continuous(breaks = c(0.1, 1, 5, 20, 50, 100, 500),
range = c(0.2, 10),
labels = c("<= 0.1", "1", "5", "20", "50", "100", ">= 500"))+
coord_sf(crs = pulkovo1942.GK12, datum = NA)+
theme_void(base_size = 12, base_family = "Arial")
fig_4 <- ggplot()+
coord_equal(xlim = c(0, 24.2), ylim = c(0, 18), expand = c(0, 0))+
annotation_custom(ggplotGrob(dendrogram),
xmin = 0, xmax = 13, ymin = 9, ymax = 18)+
annotation_custom(ggplotGrob(clust_3_plot),
xmin = 12.2, xmax = 24.2, ymin = 9, ymax = 18)+
annotation_custom(ggplotGrob(clust_6_plot),
xmin = 0, xmax = 13, ymin = 0, ymax = 9)+
annotation_custom(ggplotGrob(clust_18_plot),
xmin = 12.2, xmax = 24.2, ymin = 0, ymax = 9)+
labs(x = NULL, y = NULL)+
theme_void()
par(mar=c(0,0,0,0))
fig_4 <- ggplot()+
coord_equal(xlim = c(0, 24.2), ylim = c(0, 18), expand = c(0, 0))+
annotation_custom(ggplotGrob(dendrogram),
xmin = 0, xmax = 13, ymin = 9, ymax = 18)+
annotation_custom(ggplotGrob(clust_3_plot),
xmin = 12.2, xmax = 24.2, ymin = 9, ymax = 18)+
annotation_custom(ggplotGrob(clust_6_plot),
xmin = 0, xmax = 13, ymin = 0, ymax = 9)+
annotation_custom(ggplotGrob(clust_18_plot),
xmin = 12.2, xmax = 24.2, ymin = 0, ymax = 9)+
labs(x = NULL, y = NULL)+
theme_void()
cowplot::ggsave(plot = fig_4, filename = "Fig4.eps", path = "plots/Иллюстрации для статьи/",
width = 24.2, height = 18, units = "cm", device = cairo_ps)
