# Extract legends
fill_legend <- g_legend(case_region_plot +
guides(fill = guide_legend(direction = "horizontal",
title.position = "top",
label.position = "bottom"),
size = FALSE)+
theme(legend.position = 'bottom',
legend.spacing.x = unit(0, "lines"),
legend.key.size = unit(1, 'lines')))
size_legend <- g_legend(case_region_plot +
guides(fill = FALSE,
legend.spacing.y = unit(0, "lines")))
# ===============
# 3. Combine maps
# ===============
par(mar=c(0,0,0,0))
gg <- ggplot()+
coord_equal(xlim = c(0, 10), ylim = c(0, 10), expand = c(0.1,0.1))+
annotation_custom(ggplotGrob(case_region_plot +
guides(fill = FALSE, size = FALSE)),
xmin = 0, xmax = 10, ymin = 0, ymax = 10)+
annotation_custom(ggplotGrob(russia_plot),
xmin = 0, xmax = 4.5, ymin = 7.5, ymax = 9.5)+
annotation_custom(fill_legend,
xmin = 7.1, xmax = 9.1, ymin = 0.5, ymax = 3)+
annotation_custom(size_legend,
xmin = 7.5, xmax = 9, ymin = 2.2, ymax = 6.2)+
labs(x = NULL, y = NULL)+
theme_void()
# Save the plot
ggsave(filename = "case_region.jpeg", plot = gg, device = "jpeg", width = 7, height = 7)
directions_labels_ru <- data_frame(x = c(12670000, 12230000, 12250298, 12665000, 12700000, 12529841),
y = c(6657000, 6240000, 6330000, 6260000, 6193000, 6120000),
label = c("в автономные округа",
"на Курган",
"на Урал",
"на Омск",
"Транссиб",
"в Казахстан"))
directions_labels_ru
# Regional borders in Russia
russia <- read_sf("data/Case region/Russia_AdmDivision/Russia.shp")
russia[which(region_names == "Tyumen Oblast")]
russia[which(region_names == "Tyumen Oblast"),]
ggplot()+
geom_sf(data = russia, fill = "white", col = "black", lwd = 0.5)+
geom_sf(data = russia[which(region_names == "Tyumen Oblast"),],
col = "black", fill = "red", lwd = 0.5)+
coord_sf(crs = AlbersSiberia, datum = NA)+
theme_void()
cities_labels_ru <- data_frame(lon = c(12260298, 12446121, 12589841),
lat = c(6332398, 6430103, 6230085),
label = c("Тюмень", "Тобольск", "Ишим"))
directions_labels_ru <- data_frame(x = c(12670000, 12300000, 12250298, 12665000, 12700000, 12529841),
y = c(6657000, 6240000, 6330000, 6260000, 6193000, 6120000),
label = c("в автономные округа",
"на Курган",
"на Урал",
"на Омск",
"Транссиб",
"в Казахстан"))
# Plot
case_region_plot <- ggplot()+
geom_sf(data = st_as_sf(region), fill = "white", lwd = 0)+
geom_tile(data=elevation_spdf, aes(x=x, y=y, fill=value), alpha=1)+
scale_fill_gradientn(name = "Высота, м",
colours = rev(brewer.pal(5, 'RdYlGn'))[1:4],
limits = c(0, 160),
breaks = c(0, 40, 80, 120, 160),
space = "Lab", na.value = NA, guide = guide_legend(title.position = "top"))+
geom_sf(data = st_as_sf(rivers), col = "steelblue3", lwd = 0.7)+
geom_sf(data = st_as_sf(roads), col = "black", lwd = 0.7)+
geom_sf(data = st_as_sf(railRoads), col = "black", lwd = 0.7, lty = 4)+
geom_point(data = df, aes(x = lon, y = lat, size = Census2002/1000),
pch = 21, col = "black", fill = "white", stroke = 0.7)+
geom_text(data = cities_labels_ru,
aes(x=lon-5000, y=lat+22000, label=label),
family = "Times New Roman",
color = "black", fontface = "bold",
size=4, hjust="right", fill = "white", alpha = 1)+
geom_text(data = directions_labels_ru,
aes(x=x, y=y, label=label),
family = "Times New Roman", hjust = "right",
color = "black", fontface = "bold.italic",
size=3.5)+
scale_size_continuous(name = "Население,\n'000 (2010)", breaks = c(0.1, 1, 5, 20, 50, 100, 500),
range = c(0.3, 13), labels = c("<= 0.1", "1", "5", "20", "50", "100", ">= 500"))+
scale_x_continuous(expand = c(.1, .1))+
coord_sf(crs = pulkovo1942.GK12, datum = NA)+
ggsn::scalebar(st_as_sf(region), dist = 50,
location = "bottomleft", dd2km = FALSE,
height = 0.01, st.size = 3)+
theme_minimal(base_family = "Times New Roman", base_size = 12)+
theme(axis.title = element_blank(),
axis.text = element_blank(),
panel.grid = element_blank(),
plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm"))
# Extract legends
fill_legend <- g_legend(case_region_plot +
guides(fill = guide_legend(direction = "horizontal",
title.position = "top",
label.position = "bottom"),
size = FALSE)+
theme(legend.position = 'bottom',
legend.spacing.x = unit(0, "lines"),
legend.key.size = unit(1, 'lines')))
size_legend <- g_legend(case_region_plot +
guides(fill = FALSE,
legend.spacing.y = unit(0, "lines")))
# ===============
# 3. Combine maps
# ===============
par(mar=c(0,0,0,0))
gg <- ggplot()+
coord_equal(xlim = c(0, 10), ylim = c(0, 10), expand = c(0.1,0.1))+
annotation_custom(ggplotGrob(case_region_plot +
guides(fill = FALSE, size = FALSE)),
xmin = 0, xmax = 10, ymin = 0, ymax = 10)+
annotation_custom(ggplotGrob(russia_plot),
xmin = 0, xmax = 4.5, ymin = 7.5, ymax = 9.5)+
annotation_custom(fill_legend,
xmin = 7.1, xmax = 9.1, ymin = 0.5, ymax = 3)+
annotation_custom(size_legend,
xmin = 7.5, xmax = 9, ymin = 2.2, ymax = 6.2)+
labs(x = NULL, y = NULL)+
theme_void()
# Save the plot
ggsave(filename = "case_region.jpeg", plot = gg, device = "jpeg", width = 7, height = 7)
directions_labels_ru <- data_frame(x = c(12670000, 12300000, 12250298, 12680000, 12680000, 12529841),
y = c(6657000, 6240000, 6330000, 6260000, 6193000, 6120000),
label = c("в автономные округа",
"на Курган",
"на Урал",
"на Омск",
"Транссиб",
"в Казахстан"))
# Labels
cities_labels_ru <- data_frame(lon = c(12260298, 12446121, 12589841),
lat = c(6332398, 6430103, 6230085),
label = c("Тюмень", "Тобольск", "Ишим"))
directions_labels_ru <- data_frame(x = c(12670000, 12300000, 12250298, 12680000, 12680000, 12529841),
y = c(6657000, 6240000, 6330000, 6260000, 6193000, 6120000),
label = c("в автономные округа",
"на Курган",
"на Урал",
"на Омск",
"Транссиб",
"в Казахстан"))
# Plot
case_region_plot <- ggplot()+
geom_sf(data = st_as_sf(region), fill = "white", lwd = 0)+
geom_tile(data=elevation_spdf, aes(x=x, y=y, fill=value), alpha=1)+
scale_fill_gradientn(name = "Высота, м",
colours = rev(brewer.pal(5, 'RdYlGn'))[1:4],
limits = c(0, 160),
breaks = c(0, 40, 80, 120, 160),
space = "Lab", na.value = NA, guide = guide_legend(title.position = "top"))+
geom_sf(data = st_as_sf(rivers), col = "steelblue3", lwd = 0.7)+
geom_sf(data = st_as_sf(roads), col = "black", lwd = 0.7)+
geom_sf(data = st_as_sf(railRoads), col = "black", lwd = 0.7, lty = 4)+
geom_point(data = df, aes(x = lon, y = lat, size = Census2002/1000),
pch = 21, col = "black", fill = "white", stroke = 0.7)+
geom_text(data = cities_labels_ru,
aes(x=lon-5000, y=lat+22000, label=label),
family = "Times New Roman",
color = "black", fontface = "bold",
size=4, hjust="right", fill = "white", alpha = 1)+
geom_text(data = directions_labels_ru,
aes(x=x, y=y, label=label),
family = "Times New Roman", hjust = "right",
color = "black", fontface = "bold.italic",
size=3.5)+
scale_size_continuous(name = "Население,\n'000 (2010)", breaks = c(0.1, 1, 5, 20, 50, 100, 500),
range = c(0.3, 13), labels = c("<= 0.1", "1", "5", "20", "50", "100", ">= 500"))+
scale_x_continuous(expand = c(.1, .1))+
coord_sf(crs = pulkovo1942.GK12, datum = NA)+
ggsn::scalebar(st_as_sf(region), dist = 50,
location = "bottomleft", dd2km = FALSE,
height = 0.01, st.size = 3)+
theme_minimal(base_family = "Times New Roman", base_size = 12)+
theme(axis.title = element_blank(),
axis.text = element_blank(),
panel.grid = element_blank(),
plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm"))
# Extract legends
fill_legend <- g_legend(case_region_plot +
guides(fill = guide_legend(direction = "horizontal",
title.position = "top",
label.position = "bottom"),
size = FALSE)+
theme(legend.position = 'bottom',
legend.spacing.x = unit(0, "lines"),
legend.key.size = unit(1, 'lines')))
size_legend <- g_legend(case_region_plot +
guides(fill = FALSE,
legend.spacing.y = unit(0, "lines")))
# ===============
# 3. Combine maps
# ===============
par(mar=c(0,0,0,0))
gg <- ggplot()+
coord_equal(xlim = c(0, 10), ylim = c(0, 10), expand = c(0.1,0.1))+
annotation_custom(ggplotGrob(case_region_plot +
guides(fill = FALSE, size = FALSE)),
xmin = 0, xmax = 10, ymin = 0, ymax = 10)+
annotation_custom(ggplotGrob(russia_plot),
xmin = 0, xmax = 4.5, ymin = 7.5, ymax = 9.5)+
annotation_custom(fill_legend,
xmin = 7.1, xmax = 9.1, ymin = 0.5, ymax = 3)+
annotation_custom(size_legend,
xmin = 7.5, xmax = 9, ymin = 2.2, ymax = 6.2)+
labs(x = NULL, y = NULL)+
theme_void()
# Save the plot
ggsave(filename = "case_region.jpeg", path = "plots/",
plot = gg, device = "jpeg", width = 7, height = 7)
directions_labels_ru <- data_frame(x = c(12690000, 12300000, 12250298, 12690000, 12660000, 12529841),
y = c(6657000, 6240000, 6330000, 6260000, 6193000, 6120000),
label = c("в автономные округа",
"на Курган",
"на Урал",
"на Омск",
"Транссиб",
"в Казахстан"))
directions_labels_ru <- data_frame(x = c(12690000, 12300000, 12250298, 12680000, 12680000, 12529841),
y = c(6657000, 6240000, 6330000, 6260000, 6193000, 6120000),
label = c("в автономные округа",
"на Курган",
"на Урал",
"на Омск",
"Транссиб",
"в Казахстан"))
case_region_plot <- ggplot()+
geom_sf(data = st_as_sf(region), fill = "white", lwd = 0)+
geom_tile(data=elevation_spdf, aes(x=x, y=y, fill=value), alpha=1)+
scale_fill_gradientn(name = "Высота, м",
colours = rev(brewer.pal(5, 'RdYlGn'))[1:4],
limits = c(0, 160),
breaks = c(0, 40, 80, 120, 160),
space = "Lab", na.value = NA, guide = guide_legend(title.position = "top"))+
geom_sf(data = st_as_sf(rivers), col = "steelblue3", lwd = 0.7)+
geom_sf(data = st_as_sf(roads), col = "black", lwd = 0.7)+
geom_sf(data = st_as_sf(railRoads), col = "black", lwd = 0.7, lty = 4)+
geom_point(data = df, aes(x = lon, y = lat, size = Census2002/1000),
pch = 21, col = "black", fill = "white", stroke = 0.7)+
geom_text(data = cities_labels_ru,
aes(x=lon-5000, y=lat+22000, label=label),
family = "Times New Roman",
color = "black", fontface = "bold",
size=4, hjust="right", fill = "white", alpha = 1)+
geom_text(data = directions_labels_ru,
aes(x=x, y=y, label=label),
family = "Times New Roman", hjust = "right",
color = "black", fontface = "bold.italic",
size=3.5)+
scale_size_continuous(name = "Население,\n'000 (2010)", breaks = c(0.1, 1, 5, 20, 50, 100, 500),
range = c(0.3, 13), labels = c("<= 0.1", "1", "5", "20", "50", "100", ">= 500"))+
scale_x_continuous(expand = c(.1, .1))+
coord_sf(crs = pulkovo1942.GK12, datum = NA)+
ggsn::scalebar(st_as_sf(region), dist = 50,
location = "bottomleft", dd2km = FALSE,
height = 0.01, st.size = 3)+
theme_minimal(base_family = "Times New Roman", base_size = 12)+
theme(axis.title = element_blank(),
axis.text = element_blank(),
panel.grid = element_blank(),
plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm"))
# Extract legends
fill_legend <- g_legend(case_region_plot +
guides(fill = guide_legend(direction = "horizontal",
title.position = "top",
label.position = "bottom"),
size = FALSE)+
theme(legend.position = 'bottom',
legend.spacing.x = unit(0, "lines"),
legend.key.size = unit(1, 'lines')))
size_legend <- g_legend(case_region_plot +
guides(fill = FALSE,
legend.spacing.y = unit(0, "lines")))
# ===============
# 3. Combine maps
# ===============
par(mar=c(0,0,0,0))
gg <- ggplot()+
coord_equal(xlim = c(0, 10), ylim = c(0, 10), expand = c(0.1,0.1))+
annotation_custom(ggplotGrob(case_region_plot +
guides(fill = FALSE, size = FALSE)),
xmin = 0, xmax = 10, ymin = 0, ymax = 10)+
annotation_custom(ggplotGrob(russia_plot),
xmin = 0, xmax = 4.5, ymin = 7.5, ymax = 9.5)+
annotation_custom(fill_legend,
xmin = 7.1, xmax = 9.1, ymin = 0.5, ymax = 3)+
annotation_custom(size_legend,
xmin = 7.5, xmax = 9, ymin = 2.2, ymax = 6.2)+
labs(x = NULL, y = NULL)+
theme_void()
# Save the plot
ggsave(filename = "case_region.jpeg", path = "plots/",
plot = gg, device = "jpeg", width = 7, height = 7)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyr)
library(ggplot2)
library(sf)
library(RColorBrewer)
knitr::opts_chunk$set(echo = TRUE)
library(sp)
library(sf)
library(raster)
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggforce)
library(stringr)
load(file = "data/Part3_res_dataset.Rdata")
load("data/settlements.Rdata")
clusters_18_metrics %>%
select(clust_18, CL18_variance_2002, CL18_variance_2010) %>%
gather(Year, Variance, CL18_variance_2002:CL18_variance_2010) %>%
mutate(Year = as.integer(str_extract(Year, "\\d{4}"))) %>%
ggplot(aes(x = clust_18, y = Variance, fill = as.factor(Year)))+
geom_col(position = position_dodge())+
scale_x_continuous(breaks = 1:18)
detach("package:raster", unload=TRUE)
clusters_18_metrics %>%
select(clust_18, CL18_variance_2002, CL18_variance_2010) %>%
gather(Year, Variance, CL18_variance_2002:CL18_variance_2010) %>%
mutate(Year = as.integer(str_extract(Year, "\\d{4}"))) %>%
ggplot(aes(x = clust_18, y = Variance, fill = as.factor(Year)))+
geom_col(position = position_dodge())+
scale_x_continuous(breaks = 1:18)
ggplot()+
geom_sf(data = st_as_sf(region), fill = "white")+
geom_point(data = df, aes(x = lon, y = lat, col = CL18_variance_2010))+
# geom_raster(data = df, aes(x = lon, y = lat, fill = CL18_variance_2010))+
scale_color_viridis_c()
ggplot()+
geom_sf(data = st_as_sf(region), fill = "white")+
geom_point(data = df, aes(x = lon, y = lat, col = CL18_variance_dif))+
# geom_raster(data = df, aes(x = lon, y = lat, fill = CL18_variance_2010))+
scale_color_viridis_c()
ggplot()+
geom_sf(data = st_as_sf(region), fill = "white")+
geom_point(data = df, aes(x = lon, y = lat, col = CL18_variance_dif))+
# geom_raster(data = df, aes(x = lon, y = lat, fill = CL18_variance_2010))+
scale_color_viridis_c()
ggplot()+
geom_sf(data = st_as_sf(region), fill = "white")+
geom_point(data = df, aes(x = lon, y = lat, col = CL18_variance_dif))+
# geom_raster(data = df, aes(x = lon, y = lat, fill = CL18_variance_2010))+
scale_color_viridis_c()+
theme_void()
ggplot()+
geom_sf(data = st_as_sf(region), fill = "white")+
geom_point(data = df, aes(x = lon, y = lat, col = CL18_variance_dif))+
# geom_raster(data = df, aes(x = lon, y = lat, fill = CL18_variance_2010))+
scale_color_viridis_c()+
theme_void()
ggplot()+
geom_sf(data = st_as_sf(region), fill = "white")+
geom_point(data = df, aes(x = lon, y = lat, col = CL18_variance_dif))+
# geom_raster(data = df, aes(x = lon, y = lat, fill = CL18_variance_2010))+
scale_color_viridis_c(name = "Вариация в распределении\nнаселения по н.п., 2010 к 2002, %")+
theme_minimal()
ggplot()+
geom_sf(data = st_as_sf(region), fill = "white")+
geom_point(data = df, aes(x = lon, y = lat, col = CL18_variance_dif))+
# geom_raster(data = df, aes(x = lon, y = lat, fill = CL18_variance_2010))+
scale_color_viridis_c(name = "Вариация в распределении\nнаселения по н.п., 2010 к 2002, %")+
theme_minimal()+
theme(legend.position = "bottom")
ggplot()+
geom_sf(data = st_as_sf(region), fill = "white")+
geom_point(data = df, aes(x = lon, y = lat, col = CL18_variance_dif))+
# geom_raster(data = df, aes(x = lon, y = lat, fill = CL18_variance_2010))+
scale_color_viridis_c(name = "Вариация в распределении\nнаселения по н.п., 2010 к 2002, %",
guide = guide_legend(title.position = "top"))+
theme_minimal()+
theme(legend.position = "bottom")
ggplot()+
geom_sf(data = st_as_sf(region), fill = "white")+
geom_point(data = df, aes(x = lon, y = lat, col = CL18_variance_dif))+
# geom_raster(data = df, aes(x = lon, y = lat, fill = CL18_variance_2010))+
scale_color_viridis_c(name = "Вариация в распределении\nнаселения по н.п., 2010 к 2002, %",
guide = guide_legend(title.position = "top"))+
theme_minimal()+
theme(legend.position = "bottom")
ggplot()+
geom_sf(data = st_as_sf(region), fill = "white")+
geom_point(data = df, aes(x = lon, y = lat, col = CL18_variance_dif))+
# geom_raster(data = df, aes(x = lon, y = lat, fill = CL18_variance_2010))+
scale_color_viridis_c(name = "Вариация в распределении\nнаселения по н.п., 2010 к 2002, %",
guide = guide_legend(title.position = "top"), breaks = seq(100, 110, 2))+
theme_minimal()+
theme(legend.position = "bottom")
ggplot()+
geom_sf(data = st_as_sf(region), fill = "white")+
geom_point(data = df, aes(x = lon, y = lat, col = CL18_variance_dif))+
# geom_raster(data = df, aes(x = lon, y = lat, fill = CL18_variance_2010))+
scale_color_viridis_c(name = "Вариация в распределении\nнаселения по н.п., 2010 к 2002, %",
guide = guide_legend(title.position = "top"), breaks = seq(100, 120, 5))+
theme_minimal()+
theme(legend.position = "bottom")
ggplot()+
geom_sf(data = st_as_sf(region), fill = "white")+
geom_point(data = df, aes(x = lon, y = lat, col = CL18_variance_dif))+
# geom_raster(data = df, aes(x = lon, y = lat, fill = CL18_variance_2010))+
scale_color_viridis_c(name = "Вариация в распределении\nнаселения по н.п., 2010 к 2002, %",
guide = guide_legend(title.position = "top", nrow = 1), breaks = seq(100, 120, 4))+
theme_minimal()+
theme(legend.position = "bottom")
ggplot()+
geom_sf(data = st_as_sf(region), fill = "white")+
geom_point(data = df, aes(x = lon, y = lat, col = CL18_variance_dif))+
# geom_raster(data = df, aes(x = lon, y = lat, fill = CL18_variance_2010))+
scale_color_viridis_c(name = "Вариация в распределении\nнаселения по н.п., 2010 к 2002, %",
guide = guide_legend(title.position = "top", nrow = 1), breaks = seq(100, 120, 4))+
theme_minimal()+
theme(legend.position = "bottom",
axis.title = element_blank())
ggplot()+
geom_sf(data = st_as_sf(region), fill = "white")+
geom_point(data = df, aes(x = lon, y = lat, col = CL18_variance_dif))+
# geom_raster(data = df, aes(x = lon, y = lat, fill = CL18_variance_2010))+
scale_color_viridis_c(name = "Вариация в распределении\nнаселения по н.п., 2010 к 2002, %")+
theme_minimal()+
theme(legend.position = "bottom",
axis.title = element_blank())
ggplot()+
geom_sf(data = st_as_sf(region), fill = "white")+
geom_point(data = df, aes(x = lon, y = lat, col = CL18_pop2010to2002_rel))+
# geom_raster(data = df, aes(x = lon, y = lat, fill = CL18_pop2010to2002_rel))+
scale_color_viridis_c()
clusters_18_metrics %>%
ggplot()+
geom_point(aes(y = CL18_pop2010to2002_rel, y= CL18_dist2Tyumen))+
theme_minimal())
clusters_18_metrics %>%
ggplot()+
geom_point(aes(y = CL18_pop2010to2002_rel, y= CL18_dist2Tyumen))+
theme_minimal()
clusters_18_metrics %>%
ggplot()+
geom_point(aes(y = CL18_pop2010to2002_rel, x= CL18_dist2Tyumen))+
theme_minimal()
clusters_18_metrics %>%
ggplot()+
geom_point(aes(y = CL18_pop2010to2002_rel, x= CL18_dist2Tyumen/1000))+
geom_smooth(method = "glm", color = "red", se = F)+
scale_x_continuous(name = "Расстояние до регионального центра, км")+
scale_y_continuous(name = "Население, 2010 г. к 2002 г., %")+
theme_minimal()
clusters_18_metrics %>%
ggplot(aes(y = CL18_pop2010to2002_rel, x = CL18_dist2Tyumen/1000))+
geom_point()+
geom_smooth(method = "glm", color = "red", se = F)+
scale_x_continuous(name = "Расстояние до регионального центра, км")+
scale_y_continuous(name = "Население, 2010 г. к 2002 г., %")+
theme_minimal()
p1 <- ggplot()+
geom_sf(data = st_as_sf(region), fill = "white")+
geom_point(data = df, aes(x = lon, y = lat, col = CL18_variance_dif))+
# geom_raster(data = df, aes(x = lon, y = lat, fill = CL18_variance_2010))+
scale_color_viridis_c(name = "Вариация в распределении\nнаселения по н.п., 2010 к 2002, %")+
theme_minimal()+
theme(legend.position = "bottom",
axis.title = element_blank())
p2 <- clusters_18_metrics %>%
ggplot(aes(y = CL18_pop2010to2002_rel, x = CL18_dist2Tyumen/1000))+
geom_point()+
geom_smooth(method = "glm", color = "red", se = F)+
scale_x_continuous(name = "Расстояние до регионального центра, км")+
scale_y_continuous(name = "Население, 2010 г. к 2002 г., %")+
theme_minimal()
gridExtra::arrangeGrob(p1,p2)
gridExtra::grid.arrange (p1,p2)
gridExtra::grid.arrange(p1,p2, nrow = 1)
gridExtra::grid.arrange(p1,p2, nrow = 1)
p1 <- ggplot()+
geom_sf(data = st_as_sf(region), fill = "white")+
geom_point(data = df, aes(x = lon, y = lat, col = CL18_variance_dif))+
# geom_raster(data = df, aes(x = lon, y = lat, fill = CL18_variance_2010))+
scale_color_viridis_c(name = "Вариация в распределении\nнаселения по н.п., 2010 к 2002, %")+
theme_minimal()+
theme(legend.position = "bottom",
axis.title = element_blank())
p2 <- clusters_18_metrics %>%
ggplot(aes(y = CL18_pop2010to2002_rel, x = CL18_dist2Tyumen/1000))+
geom_point()+
geom_smooth(method = "glm", color = "red", se = F)+
scale_x_continuous(name = "Расстояние до регионального центра, км")+
scale_y_continuous(name = "Население, 2010 г. к 2002 г., %")+
theme_minimal()
gridExtra::grid.arrange(p1,p2, nrow = 1)
p1 <- ggplot()+
geom_sf(data = st_as_sf(region), fill = "white")+
geom_point(data = df, aes(x = lon, y = lat, col = CL18_variance_dif))+
# geom_raster(data = df, aes(x = lon, y = lat, fill = CL18_variance_2010))+
scale_color_viridis_c(name = "Вариация в распределении\nнаселения по н.п., 2010 к 2002, %")+
theme_minimal()+
theme(legend.position = "bottom",
axis.title = element_blank())
p2 <- clusters_18_metrics %>%
ggplot(aes(y = CL18_pop2010to2002_rel, x = CL18_dist2Tyumen/1000))+
geom_point()+
geom_smooth(method = "glm", color = "red", se = F)+
scale_x_continuous(name = "Расстояние до регионального центра, км")+
scale_y_continuous(name = "Население, 2010 г. к 2002 г., %")+
theme_minimal()
gridExtra::grid.arrange(p1,p2, nrow = 1)
gridExtra::grid.arrange(p1,p2, nrow = 1)
gridExtra::grid.arrange(p1,p2, nrow = 1)
