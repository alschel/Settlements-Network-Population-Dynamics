theme_bw(base_size = 12, base_family = "Times New Roman")+
theme(panel.grid = element_blank(),
axis.title.x = element_blank())
dunn_plot <- dunn %>%
ggplot(aes(x = n, y = val))+
geom_col(fill = "grey40", width = 0.8)+
scale_y_continuous(name = "Значение индекса",
breaks = seq(0, 0.05, 0.01), limits = c(0, 0.05))+
scale_x_continuous(name = "Число кластеров",
breaks = seq(0, 50, 1), labels = x_ticks)+
theme_bw(base_size = 12, base_family = "Times New Roman")+
theme(panel.grid = element_blank())
frey_plot <- frey %>%
ggplot(aes(x = n, y = val))+
geom_col(fill = "grey40", width = 0.8)+
scale_y_continuous(name = "Значение индекса",
breaks = seq(0, 1.2, 0.2),
limits = c(0, 1.2))+
scale_x_continuous(name = "Число кластеров",
breaks = seq(1, 50, 1), labels = x_ticks)+
theme_bw(base_size = 12, base_family = "Times New Roman")+
theme(panel.grid = element_blank(),
axis.title.x = element_blank())
cindex_plot <- cindex %>%
ggplot(aes(x = n, y = val))+
geom_col(fill = "grey40", width = 0.8)+
scale_y_continuous(name = "Значение индекса",
breaks = seq(0, 0.3, 0.05), limits = c(0, 0.3))+
scale_x_continuous(name = "Число кластеров",
breaks = seq(1, 50, 1), labels = x_ticks)+
theme_bw(base_size = 12, base_family = "Times New Roman")+
theme(panel.grid = element_blank(),
axis.title.x = element_blank())
dunn_plot <- dunn %>%
ggplot(aes(x = n, y = val))+
geom_col(fill = "grey40", width = 0.8)+
scale_y_continuous(name = "Значение индекса",
breaks = seq(0, 0.05, 0.01), limits = c(0, 0.05))+
scale_x_continuous(name = "Число кластеров",
breaks = seq(1, 50, 1), labels = x_ticks)+
theme_bw(base_size = 12, base_family = "Times New Roman")+
theme(panel.grid = element_blank())
ggplot()+
coord_equal(xlim = c(0, 10), ylim = c(0, 9), expand = c(0.1,0.1))+
annotation_custom(ggplotGrob(frey_plot),
xmin = 0, xmax = 10, ymin = 6, ymax = 9)+
annotation_custom(ggplotGrob(cindex_plot),
xmin = 0, xmax = 10, ymin = 3, ymax = 6)+
annotation_custom(ggplotGrob(dunn_plot),
xmin = 0, xmax = 10, ymin = 0, ymax = 3)+
theme_void()
frey %>%
ggplot(aes(x = n, y = val))+
geom_col(fill = "grey40", width = 0.8)+
scale_y_continuous(name = "Значение индекса",
breaks = seq(0, 1.2, 0.2),
limits = c(0, 1.2))+
scale_x_continuous(name = "Число кластеров",
breaks = seq(1, 50, 1), labels = x_ticks)+
theme_bw(base_size = 12, base_family = "Times New Roman")+
theme(panel.grid = element_blank(),
axis.title.x = element_blank())
dunn_plot <- dunn %>%
ggplot(aes(x = n, y = val))+
geom_col(fill = "grey40", width = 0.8)+
scale_y_continuous(name = "Значение индекса",
breaks = seq(0, 0.05, 0.01), limits = c(0, 0.05))+
scale_x_continuous(name = "Число кластеров",
breaks = seq(1, 50, 1), labels = x_ticks)+
theme_bw(base_size = 12, base_family = "Times New Roman")+
theme(panel.grid = element_blank())
dunn_plot
x_ticks <- seq(1, 50, 1)
x_ticks[-seq(1, 51, 5)] <- ""
frey_plot <- frey %>%
ggplot(aes(x = n, y = val))+
geom_col(fill = "grey40", width = 0.8)+
scale_y_continuous(name = "Значение индекса",
breaks = seq(0, 1.2, 0.2),
limits = c(0, 1.2))+
scale_x_continuous(name = "Число кластеров",
breaks = seq(1, 50, 1), labels = x_ticks)+
theme_bw(base_size = 12, base_family = "Times New Roman")+
theme(panel.grid = element_blank(),
axis.title.x = element_blank())
frey_plot
x_ticks <- seq(1, 50, 1)
x_ticks[-seq(1, 51, 5)]
x_ticks[-seq(0, 51, 5)]
x_ticks[-seq(0, 51, 5)] <- ""
frey_plot <- frey %>%
ggplot(aes(x = n, y = val))+
geom_col(fill = "grey40", width = 0.8)+
scale_y_continuous(name = "Значение индекса",
breaks = seq(0, 1.2, 0.2),
limits = c(0, 1.2))+
scale_x_continuous(name = "Число кластеров",
breaks = seq(1, 50, 1), labels = x_ticks)+
theme_bw(base_size = 12, base_family = "Times New Roman")+
theme(panel.grid = element_blank(),
axis.title.x = element_blank())
frey_plot
x_ticks <- seq(1, 50, 1)
x_ticks[-seq(0, 51, 5)]
x_ticks[-seq(2, 51, 5)]
x_ticks[-seq(0, 51, 5)]
x_ticks[-c(1, seq(0, 51, 5))]
x_ticks <- seq(1, 50, 1)
x_ticks[-c(1, seq(0, 51, 5))] <- ""
frey_plot <- frey %>%
ggplot(aes(x = n, y = val))+
geom_col(fill = "grey40", width = 0.8)+
scale_y_continuous(name = "Значение индекса",
breaks = seq(0, 1.2, 0.2),
limits = c(0, 1.2))+
scale_x_continuous(name = "Число кластеров",
breaks = seq(1, 50, 1), labels = x_ticks)+
theme_bw(base_size = 12, base_family = "Times New Roman")+
theme(panel.grid = element_blank(),
axis.title.x = element_blank())
frey_plot
cindex_plot <- cindex %>%
ggplot(aes(x = n, y = val))+
geom_col(fill = "grey40", width = 0.8)+
scale_y_continuous(name = "Значение индекса",
breaks = seq(0, 0.3, 0.05), limits = c(0, 0.3))+
scale_x_continuous(name = "Число кластеров",
breaks = seq(1, 50, 1), labels = x_ticks)+
theme_bw(base_size = 12, base_family = "Times New Roman")+
theme(panel.grid = element_blank(),
axis.title.x = element_blank())
dunn_plot <- dunn %>%
ggplot(aes(x = n, y = val))+
geom_col(fill = "grey40", width = 0.8)+
scale_y_continuous(name = "Значение индекса",
breaks = seq(0, 0.05, 0.01), limits = c(0, 0.05))+
scale_x_continuous(name = "Число кластеров",
breaks = seq(1, 50, 1), labels = x_ticks)+
theme_bw(base_size = 12, base_family = "Times New Roman")+
theme(panel.grid = element_blank())
ggplot()+
coord_equal(xlim = c(0, 10), ylim = c(0, 9), expand = c(0.1,0.1))+
annotation_custom(ggplotGrob(frey_plot),
xmin = 0, xmax = 10, ymin = 6, ymax = 9)+
annotation_custom(ggplotGrob(cindex_plot),
xmin = 0, xmax = 10, ymin = 3, ymax = 6)+
annotation_custom(ggplotGrob(dunn_plot),
xmin = 0, xmax = 10, ymin = 0, ymax = 3)+
theme_void()
cindex %>%
ggplot(aes(x = n, y = val))+
geom_col(fill = "grey40", width = 0.8)+
ggtitle(label = "Cindex")+
scale_y_continuous(name = "Значение индекса",
breaks = seq(0, 0.3, 0.05), limits = c(0, 0.3))+
scale_x_continuous(name = "Число кластеров",
breaks = seq(1, 50, 1), labels = x_ticks)+
theme_bw(base_size = 12, base_family = "Times New Roman")+
theme(panel.grid = element_blank(),
axis.title.x = element_blank())
ggplot()+
coord_equal(xlim = c(0, 10), ylim = c(0, 9), expand = c(0.1,0.1))+
annotation_custom(ggplotGrob(frey_plot),
xmin = 0, xmax = 10, ymin = 6, ymax = 9)+
annotation_custom(ggplotGrob(cindex_plot),
xmin = 0, xmax = 10, ymin = 3, ymax = 6)+
annotation_custom(ggplotGrob(dunn_plot),
xmin = 0, xmax = 10, ymin = 0, ymax = 3)+
theme_void()
cindex_plot <- cindex %>%
ggplot(aes(x = n, y = val))+
geom_col(fill = "grey40", width = 0.8)+
ggtitle(label = "Cindex")+
scale_y_continuous(name = "Значение индекса",
breaks = seq(0, 0.3, 0.05), limits = c(0, 0.3))+
scale_x_continuous(name = "Число кластеров",
breaks = seq(1, 50, 1), labels = x_ticks)+
theme_bw(base_size = 12, base_family = "Times New Roman")+
theme(panel.grid = element_blank(),
axis.title.x = element_blank(),
title = element_text())
ggplot()+
coord_equal(xlim = c(0, 10), ylim = c(0, 9), expand = c(0.1,0.1))+
annotation_custom(ggplotGrob(frey_plot),
xmin = 0, xmax = 10, ymin = 6, ymax = 9)+
annotation_custom(ggplotGrob(cindex_plot),
xmin = 0, xmax = 10, ymin = 3, ymax = 6)+
annotation_custom(ggplotGrob(dunn_plot),
xmin = 0, xmax = 10, ymin = 0, ymax = 3)+
theme_void()
frey_plot <- frey %>%
ggplot(aes(x = n, y = val))+
geom_col(fill = "grey40", width = 0.8)+
ggtitle(label = "Frey")+
scale_y_continuous(name = "Значение индекса",
breaks = seq(0, 1.2, 0.2),
limits = c(0, 1.2))+
scale_x_continuous(name = "Число кластеров",
breaks = seq(1, 50, 1), labels = x_ticks)+
theme_bw(base_size = 12, base_family = "Times New Roman")+
theme(panel.grid = element_blank(),
axis.title.x = element_blank())
dunn_plot <- dunn %>%
ggplot(aes(x = n, y = val))+
geom_col(fill = "grey40", width = 0.8)+
ggtitle(label = "Dunn")+
scale_y_continuous(name = "Значение индекса",
breaks = seq(0, 0.05, 0.01), limits = c(0, 0.05))+
scale_x_continuous(name = "Число кластеров",
breaks = seq(1, 50, 1), labels = x_ticks)+
theme_bw(base_size = 12, base_family = "Times New Roman")+
theme(panel.grid = element_blank())
ggplot()+
coord_equal(xlim = c(0, 10), ylim = c(0, 9), expand = c(0.1,0.1))+
annotation_custom(ggplotGrob(frey_plot),
xmin = 0, xmax = 10, ymin = 6, ymax = 9)+
annotation_custom(ggplotGrob(cindex_plot),
xmin = 0, xmax = 10, ymin = 3, ymax = 6)+
annotation_custom(ggplotGrob(dunn_plot),
xmin = 0, xmax = 10, ymin = 0, ymax = 3)+
theme_void()
Appendix_fig_1 <- ggplot()+
coord_equal(xlim = c(0, 10), ylim = c(0, 9), expand = c(0.1,0.1))+
annotation_custom(ggplotGrob(frey_plot),
xmin = 0, xmax = 10, ymin = 6, ymax = 9)+
annotation_custom(ggplotGrob(cindex_plot),
xmin = 0, xmax = 10, ymin = 3, ymax = 6)+
annotation_custom(ggplotGrob(dunn_plot),
xmin = 0, xmax = 10, ymin = 0, ymax = 3)+
theme_void()
ggsave(filename = "Appendix_fig_1.jpeg", path = "plots/", dpi = 200,
plot = Appendix_fig_1, device = "jpeg", width = 7, height = 6)
ggsave(filename = "Appendix_fig_1.jpeg", path = "plots/", dpi = 200,
plot = Appendix_fig_1, device = "jpeg", width = 6.5, height = 5.5)
# Save the plot
ggsave(filename = "Appendix_fig_1.jpeg", path = "plots/", dpi = 200,
plot = Appendix_fig_1, device = "jpeg", width = 7, height = 6)
par(mar=c(0,0,0,0))
Appendix_fig_1 <- ggplot()+
coord_equal(xlim = c(0, 10), ylim = c(0, 9), expand = c(0.1,0.1))+
annotation_custom(ggplotGrob(frey_plot),
xmin = 0, xmax = 10, ymin = 6, ymax = 9)+
annotation_custom(ggplotGrob(cindex_plot),
xmin = 0, xmax = 10, ymin = 3, ymax = 6)+
annotation_custom(ggplotGrob(dunn_plot),
xmin = 0, xmax = 10, ymin = 0, ymax = 3)+
theme_void()
# Save the plot
ggsave(filename = "Appendix_fig_1.jpeg", path = "plots/", dpi = 200,
plot = Appendix_fig_1, device = "jpeg", width = 7, height = 6)
frey_plot <- frey %>%
ggplot(aes(x = n, y = val))+
geom_col(fill = "grey40", width = 0.8)+
ggtitle(label = "frey")+
scale_y_continuous(name = "Значение индекса",
breaks = seq(0, 1.2, 0.2),
limits = c(0, 1.2))+
scale_x_continuous(name = "Число кластеров",
breaks = seq(1, 50, 1), labels = x_ticks)+
theme_bw(base_size = 12, base_family = "Times New Roman")+
theme(panel.grid = element_blank(),
axis.title.x = element_blank())
cindex_plot <- cindex %>%
ggplot(aes(x = n, y = val))+
geom_col(fill = "grey40", width = 0.8)+
ggtitle(label = "cindex")+
scale_y_continuous(name = "Значение индекса",
breaks = seq(0, 0.3, 0.05), limits = c(0, 0.3))+
scale_x_continuous(name = "Число кластеров",
breaks = seq(1, 50, 1), labels = x_ticks)+
theme_bw(base_size = 12, base_family = "Times New Roman")+
theme(panel.grid = element_blank(),
axis.title.x = element_blank(),
title = element_text())
dunn_plot <- dunn %>%
ggplot(aes(x = n, y = val))+
geom_col(fill = "grey40", width = 0.8)+
ggtitle(label = "dunn")+
scale_y_continuous(name = "Значение индекса",
breaks = seq(0, 0.05, 0.01), limits = c(0, 0.05))+
scale_x_continuous(name = "Число кластеров",
breaks = seq(1, 50, 1), labels = x_ticks)+
theme_bw(base_size = 12, base_family = "Times New Roman")+
theme(panel.grid = element_blank())
par(mar=c(0,0,0,0))
Appendix_fig_1 <- ggplot()+
coord_equal(xlim = c(0, 10), ylim = c(0, 9), expand = c(0.1,0.1))+
annotation_custom(ggplotGrob(frey_plot),
xmin = 0, xmax = 10, ymin = 6, ymax = 9)+
annotation_custom(ggplotGrob(cindex_plot),
xmin = 0, xmax = 10, ymin = 3, ymax = 6)+
annotation_custom(ggplotGrob(dunn_plot),
xmin = 0, xmax = 10, ymin = 0, ymax = 3)+
theme_void()
# Save the plot
ggsave(filename = "Appendix_fig_1.jpeg", path = "plots/", dpi = 300,
plot = Appendix_fig_1, device = "jpeg", width = 7, height = 6)
frey_plot <- frey %>%
ggplot(aes(x = n, y = val))+
geom_col(fill = "grey30", width = 0.8)+
ggtitle(label = "frey")+
scale_y_continuous(name = "Значение индекса",
breaks = seq(0, 1.2, 0.2),
limits = c(0, 1.2))+
scale_x_continuous(name = "Число кластеров",
breaks = seq(1, 50, 1), labels = x_ticks)+
theme_bw(base_size = 12, base_family = "Times New Roman")+
theme(panel.grid = element_blank(),
axis.title.x = element_blank())
cindex_plot <- cindex %>%
ggplot(aes(x = n, y = val))+
geom_col(fill = "grey40", width = 0.8)+
ggtitle(label = "cindex")+
scale_y_continuous(name = "Значение индекса",
breaks = seq(0, 0.3, 0.05), limits = c(0, 0.3))+
scale_x_continuous(name = "Число кластеров",
breaks = seq(1, 50, 1), labels = x_ticks)+
theme_bw(base_size = 12, base_family = "Times New Roman")+
theme(panel.grid = element_blank(),
axis.title.x = element_blank(),
title = element_text())
dunn_plot <- dunn %>%
ggplot(aes(x = n, y = val))+
geom_col(fill = "grey40", width = 0.8)+
ggtitle(label = "dunn")+
scale_y_continuous(name = "Значение индекса",
breaks = seq(0, 0.05, 0.01), limits = c(0, 0.05))+
scale_x_continuous(name = "Число кластеров",
breaks = seq(1, 50, 1), labels = x_ticks)+
theme_bw(base_size = 12, base_family = "Times New Roman")+
theme(panel.grid = element_blank())
par(mar=c(0,0,0,0))
Appendix_fig_1 <- ggplot()+
coord_equal(xlim = c(0, 10), ylim = c(0, 9), expand = c(0.1,0.1))+
annotation_custom(ggplotGrob(frey_plot),
xmin = 0, xmax = 10, ymin = 6, ymax = 9)+
annotation_custom(ggplotGrob(cindex_plot),
xmin = 0, xmax = 10, ymin = 3, ymax = 6)+
annotation_custom(ggplotGrob(dunn_plot),
xmin = 0, xmax = 10, ymin = 0, ymax = 3)+
theme_void()
Appendix_fig_1
frey_plot <- frey %>%
ggplot(aes(x = n, y = val))+
geom_col(fill = "grey30", width = 0.8)+
ggtitle(label = "frey")+
scale_y_continuous(name = "Значение индекса",
breaks = seq(0, 1.2, 0.2),
limits = c(0, 1.2))+
scale_x_continuous(name = "Число кластеров",
breaks = seq(1, 50, 1), labels = x_ticks)+
theme_bw(base_size = 12, base_family = "Times New Roman")+
theme(panel.grid = element_blank(),
axis.title.x = element_blank())
cindex_plot <- cindex %>%
ggplot(aes(x = n, y = val))+
geom_col(fill = "grey30", width = 0.8)+
ggtitle(label = "cindex")+
scale_y_continuous(name = "Значение индекса",
breaks = seq(0, 0.3, 0.05), limits = c(0, 0.3))+
scale_x_continuous(name = "Число кластеров",
breaks = seq(1, 50, 1), labels = x_ticks)+
theme_bw(base_size = 12, base_family = "Times New Roman")+
theme(panel.grid = element_blank(),
axis.title.x = element_blank(),
title = element_text())
dunn_plot <- dunn %>%
ggplot(aes(x = n, y = val))+
geom_col(fill = "grey30", width = 0.8)+
ggtitle(label = "dunn")+
scale_y_continuous(name = "Значение индекса",
breaks = seq(0, 0.05, 0.01), limits = c(0, 0.05))+
scale_x_continuous(name = "Число кластеров",
breaks = seq(1, 50, 1), labels = x_ticks)+
theme_bw(base_size = 12, base_family = "Times New Roman")+
theme(panel.grid = element_blank())
par(mar=c(0,0,0,0))
Appendix_fig_1 <- ggplot()+
coord_equal(xlim = c(0, 10), ylim = c(0, 9), expand = c(0.1,0.1))+
annotation_custom(ggplotGrob(frey_plot),
xmin = 0, xmax = 10, ymin = 6, ymax = 9)+
annotation_custom(ggplotGrob(cindex_plot),
xmin = 0, xmax = 10, ymin = 3, ymax = 6)+
annotation_custom(ggplotGrob(dunn_plot),
xmin = 0, xmax = 10, ymin = 0, ymax = 3)+
theme_void()
# Save the plot
ggsave(filename = "Appendix_fig_1.jpeg", path = "plots/", dpi = 300,
plot = Appendix_fig_1, device = "jpeg", width = 7, height = 6)
load("~/Desktop/ДИССЕРТАЦИЯ/Settlements-Network-Population-Dynamics/data/Part3_res_dataset.Rdata")
View(clusters_6_metrics)
View(clusters_6_metrics)
View(df)
clust_6_2002
# load the data
load("data/Part2_output.RData")
library(dplyr)
clust_6_2002
df[clust_6 == 1, ]
df[df$clust_6 == 1, ]
df[df$clust_6 == 1, ] %>% pull(clo_CL6)
df[df$clust_6 == 1, ] %>% pull(clo_CL6) %>% max()
df[which(df$clo_CL6 == df[df$clust_6 == 1, ] %>% pull(clo_CL6) %>% max())]
df[which(df$clo_CL6 == df[df$clust_6 == 1, ] %>% pull(clo_CL6) %>% max()), ]
which(df$clo_CL6 == df[df$clust_6 == 1, ] %>% pull(clo_CL6) %>% max())
# We call the metric "radius"
radius_6 <- NA_real_
for (i in 1:nrow(clusters_6_metrics)) {
# Define logical vector to subset settlements by the cluster
select_cluster_condition <- clust_6_2002 == i
# Find index of the settlement with highest closeness centrality
temp_max = df %>% filter(clust_6 == i) %>% pull(clo_CL6) %>% max()
select_settl_condition <- which(df$clo_CL6 == temp_max)
# Calculate median value
radius_6[i] <- dist_matrix_2002[select_settl_condition, select_cluster_condition] %>% median()
}
radius_6
radius_18 <- NA_real_
for (i in 1:nrow(clusters_18_metrics)) {
# Define logical vector to subset settlements by the cluster
select_cluster_condition <- clust_18_2002 == i
# Find index of the settlement with highest closeness centrality
temp_max = df %>% filter(clust_18 == i) %>% pull(clo_CL18) %>% max()
select_settl_condition <- which(df$clo_CL18 == temp_max)
# Calculate median value
radius_18[i] <- dist_matrix_2002[select_settl_condition, select_cluster_condition] %>% median()
}
radius_18
median(radius_18)
mean(radius_18)
#
median(radius_6)
median(radius_18)
library(dplyr)
# load the data
load("data/Part2_output.RData")
load("~/Desktop/ДИССЕРТАЦИЯ/Settlements-Network-Population-Dynamics/data/Part3_res_dataset.Rdata")
load("data/Part2_output.RData")
load("data/Part3_res_dataset.Rdata")
# We call the metric "half_radius"
half_radius_6 <- NA_real_
for (i in 1:nrow(clusters_6_metrics)) {
# Define logical vector to subset settlements by the cluster
select_cluster_condition <- clust_6_2002 == i
# Find index of the settlement with highest closeness centrality
temp_max = df %>% filter(clust_6 == i) %>% pull(clo_CL6) %>% max()
select_settl_condition <- which(df$clo_CL6 == temp_max)
# Calculate median value
radius_6[i] <- dist_matrix_2002[select_settl_condition, select_cluster_condition] %>% median()
}
# We call the metric "half_radius"
half_radius_6 <- NA_real_
for (i in 1:nrow(clusters_6_metrics)) {
# Define logical vector to subset settlements by the cluster
select_cluster_condition <- clust_6_2002 == i
# Find index of the settlement with highest closeness centrality
temp_max = df %>% filter(clust_6 == i) %>% pull(clo_CL6) %>% max()
select_settl_condition <- which(df$clo_CL6 == temp_max)
# Calculate median value
half_radius_6[i] <- dist_matrix_2002[select_settl_condition, select_cluster_condition] %>% median()
}
half_radius_18 <- NA_real_
half_radius_18 <- NA_real_
for (i in 1:nrow(clusters_18_metrics)) {
# Define logical vector to subset settlements by the cluster
select_cluster_condition <- clust_18_2002 == i
# Find index of the settlement with highest closeness centrality
temp_max = df %>% filter(clust_18 == i) %>% pull(clo_CL18) %>% max()
select_settl_condition <- which(df$clo_CL18 == temp_max)
# Calculate median value
half_radius_18[i] <- dist_matrix_2002[select_settl_condition, select_cluster_condition] %>% median()
}
median(half_radius_6)
median(half_radius_18)
# We call the metric "half_radius"
half_radius_6 <- NA_real_
for (i in 1:nrow(clusters_6_metrics)) {
# Define logical vector to subset settlements by the cluster
select_cluster_condition <- clust_6_2002 == i
# Find index of the settlement with highest closeness centrality
temp_max = df %>% filter(clust_6 == i) %>% pull(clo_CL6) %>% max()
select_settl_condition <- which(df$clo_CL6 == temp_max)
# Calculate median value
half_radius_6[i] <- dist_matrix_2002[select_settl_condition, select_cluster_condition] %>% mean()
}
mean(half_radius_6)
median(half_radius_6)  # 72628.18
mean(half_radius_6)  # 72628.18
half_radius_18 <- NA_real_
for (i in 1:nrow(clusters_18_metrics)) {
# Define logical vector to subset settlements by the cluster
select_cluster_condition <- clust_18_2002 == i
# Find index of the settlement with highest closeness centrality
temp_max = df %>% filter(clust_18 == i) %>% pull(clo_CL18) %>% max()
select_settl_condition <- which(df$clo_CL18 == temp_max)
# Calculate median value
half_radius_18[i] <- dist_matrix_2002[select_settl_condition, select_cluster_condition] %>% mean()
}
mean(half_radius_18) # 35732.43
half_radius_18
median(half_radius_18) # 35732.43
half_radius_18 <- NA_real_
for (i in 1:nrow(clusters_18_metrics)) {
# Define logical vector to subset settlements by the cluster
select_cluster_condition <- clust_18_2002 == i
# Find index of the settlement with highest closeness centrality
temp_max = df %>% filter(clust_18 == i) %>% pull(clo_CL18) %>% max()
select_settl_condition <- which(df$clo_CL18 == temp_max)
# Calculate median value
half_radius_18[i] <- dist_matrix_2002[select_settl_condition, select_cluster_condition] %>% mean()
}
mean(half_radius_18) # 35732.43
