color = "red", fontface = "bold",
size=3, hjust="right", alpha = 1)+
scale_size_continuous(name = "Население,\nтыс. чел. (2010)", breaks = c(0.1, 1, 5, 20, 50, 100, 500),
range = c(0.3, 13), labels = c("< 0.1", "1", "5", "20", "50", "100", "> 500"))+
scale_x_continuous(expand = c(.1, .1))+
coord_sf(crs = pulkovo1942.GK12, datum = NA)+
ggsn::scalebar(st_as_sf(region), dist = 50,
location = "bottomleft", dd2km = FALSE,
height = 0.01, st.size = 3)+
theme_minimal(base_family = "Arial", base_size = 12)+
theme(axis.title = element_blank(),
axis.text = element_blank(),
panel.grid = element_blank(),
plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm"))
data_plot
data_plot <- ggplot()+
geom_sf(data = st_as_sf(region), fill = "white", lwd = 0)+
geom_sf(data = st_as_sf(roads_fixed), col = "grey30", lwd = 0.5)+
geom_point(data = df, aes(x = lon, y = lat, size = Census2002/1000),
pch = 21, col = "black", fill = "white", stroke = 0.7)+
geom_text(data = cities_labels_ru,
aes(x=lon-5000, y=lat+22000, label=label),
family = "Arial",
color = "red", fontface = "bold",
size=3, hjust="right", alpha = 1)+
scale_size_continuous(name = "Население,\nтыс. чел. (2010)", breaks = c(0.1, 1, 5, 20, 50, 100, 500),
range = c(0.3, 13), labels = c("< 0.1", "1", "5", "20", "50", "100", "> 500"))+
scale_x_continuous(expand = c(.1, .1))+
coord_sf(crs = pulkovo1942.GK12, datum = NA)+
ggsn::scalebar(st_as_sf(region), dist = 50,
location = "bottomleft", dd2km = FALSE,
height = 0.01, st.size = 3)+
theme_minimal(base_family = "Arial", base_size = 12)+
theme(axis.title = element_blank(),
axis.text = element_blank(),
panel.grid = element_blank(),
plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm"))
data_plot_rus <- ggplot()+
coord_equal(xlim = c(0, 10), ylim = c(0, 10), expand = c(0,0))+
annotation_custom(ggplotGrob(data_plot + guides(
size = FALSE)),
xmin = 0, xmax = 10, ymin = 0, ymax = 10)+
annotation_custom(ggplotGrob(russia_plot),
xmin = 0, xmax = 3.5, ymin = 7, ymax = 9)+
annotation_custom(size_legend,
xmin = 7.5, xmax = 9, ymin = 2.2, ymax = 6.2)+
labs(x = NULL, y = NULL)+
theme_void()
# Сохраним рисунок
ggsave(plot = data_plot_rus, filename = "Fig_case_region_for_pres.jpeg", path = "plots/",
dpi = 200, device = "jpeg", width = 18, height = 17, units = "cm")
library(ggrepel)
data_plot <- ggplot()+
geom_sf(data = st_as_sf(region), fill = "white", lwd = 0.1)+
geom_sf(data = st_as_sf(roads_fixed), col = "grey30", lwd = 0.5)+
geom_point(data = df, aes(x = lon, y = lat, size = Census2002/1000),
pch = 21, col = "black", fill = "white", stroke = 0.7)+
geom_text_repel(data = cities_labels_ru,
aes(x=lon-5000, y=lat+22000, label=label),
family = "Arial",
color = "red", fontface = "bold",
size=3, hjust="right", alpha = 1)+
scale_size_continuous(name = "Население,\nтыс. чел. (2002)", breaks = c(0.1, 1, 5, 20, 50, 100, 500),
range = c(0.3, 13), labels = c("< 0.1", "1", "5", "20", "50", "100", "> 500"))+
scale_x_continuous(expand = c(.1, .1))+
coord_sf(crs = pulkovo1942.GK12, datum = NA)+
ggsn::scalebar(st_as_sf(region), dist = 50,
location = "bottomleft", dd2km = FALSE,
height = 0.01, st.size = 3)+
theme_minimal(base_family = "Arial", base_size = 12)+
theme(axis.title = element_blank(),
axis.text = element_blank(),
panel.grid = element_blank(),
plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm"))
data_plot
data_plot <- ggplot()+
geom_sf(data = st_as_sf(region), fill = "white", lwd = 0.1)+
geom_sf(data = st_as_sf(roads_fixed), col = "grey30", lwd = 0.5)+
geom_point(data = df, aes(x = lon, y = lat, size = Census2002/1000),
pch = 21, col = "black", fill = "white", stroke = 0.7)+
geom_label_repel(data = cities_labels_ru,
aes(x=lon-5000, y=lat+22000, label=label),
family = "Arial",
color = "red", fontface = "bold",
size=3, hjust="right", alpha = 1)+
scale_size_continuous(name = "Население,\nтыс. чел. (2002)", breaks = c(0.1, 1, 5, 20, 50, 100, 500),
range = c(0.3, 13), labels = c("< 0.1", "1", "5", "20", "50", "100", "> 500"))+
scale_x_continuous(expand = c(.1, .1))+
coord_sf(crs = pulkovo1942.GK12, datum = NA)+
ggsn::scalebar(st_as_sf(region), dist = 50,
location = "bottomleft", dd2km = FALSE,
height = 0.01, st.size = 3)+
theme_minimal(base_family = "Arial", base_size = 12)+
theme(axis.title = element_blank(),
axis.text = element_blank(),
panel.grid = element_blank(),
plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm"))
data_plot
data_plot <- ggplot()+
geom_sf(data = st_as_sf(region), fill = "white", col = "black", lwd = 0.5)+
geom_sf(data = st_as_sf(roads_fixed), col = "grey30", lwd = 0.5)+
geom_point(data = df, aes(x = lon, y = lat, size = Census2002/1000),
pch = 21, col = "black", fill = "white", stroke = 0.7)+
geom_text(data = cities_labels_ru,
aes(x=lon-5000, y=lat+22000, label=label),
family = "Arial",
color = "red", fontface = "bold",
size=3, hjust="right", alpha = 1)+
scale_size_continuous(name = "Население,\nтыс. чел. (2002)", breaks = c(0.1, 1, 5, 20, 50, 100, 500),
range = c(0.3, 13), labels = c("< 0.1", "1", "5", "20", "50", "100", "> 500"))+
scale_x_continuous(expand = c(.1, .1))+
coord_sf(crs = pulkovo1942.GK12, datum = NA)+
ggsn::scalebar(st_as_sf(region), dist = 50,
location = "bottomleft", dd2km = FALSE,
height = 0.01, st.size = 3)+
theme_minimal(base_family = "Arial", base_size = 12)+
theme(axis.title = element_blank(),
axis.text = element_blank(),
panel.grid = element_blank(),
plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm"))
par(mar=c(0,0,0,0))
data_plot_rus <- ggplot()+
coord_equal(xlim = c(0, 10), ylim = c(0, 10), expand = c(0,0))+
annotation_custom(ggplotGrob(data_plot + guides(
size = FALSE)),
xmin = 0, xmax = 10, ymin = 0, ymax = 10)+
annotation_custom(ggplotGrob(russia_plot),
xmin = 0, xmax = 3.5, ymin = 7, ymax = 9)+
annotation_custom(size_legend,
xmin = 7.5, xmax = 9, ymin = 2.2, ymax = 6.2)+
labs(x = NULL, y = NULL)+
theme_void()
# Сохраним рисунок
ggsave(plot = data_plot_rus, filename = "Fig_case_region_for_pres.jpeg", path = "plots/",
dpi = 200, device = "jpeg", width = 18, height = 17, units = "cm")
data_plot <- ggplot()+
geom_sf(data = st_as_sf(region), fill = "white", col = "black", lwd = 0.5)+
geom_sf(data = st_as_sf(roads_fixed), col = "grey30", lwd = 0.5)+
geom_point(data = df, aes(x = lon, y = lat, size = Census2002/1000),
pch = 21, col = "black", fill = "white", stroke = 0.7)+
geom_text(data = cities_labels_ru,
aes(x=lon-5000, y=lat+22000, label=label),
family = "Arial",
color = "red", fontface = "bold",
size=3, hjust="right", alpha = 1)+
scale_size_continuous(name = "Население,\nтыс. чел. (2002)", breaks = c(0.1, 1, 5, 20, 50, 100, 500),
range = c(0.3, 13), labels = c("<0.1", "0.1-1", "1-5", "5-20", "20-50", "50-100", "> 500"))+
scale_x_continuous(expand = c(.1, .1))+
coord_sf(crs = pulkovo1942.GK12, datum = NA)+
ggsn::scalebar(st_as_sf(region), dist = 50,
location = "bottomleft", dd2km = FALSE,
height = 0.01, st.size = 3)+
theme_minimal(base_family = "Arial", base_size = 12)+
theme(axis.title = element_blank(),
axis.text = element_blank(),
panel.grid = element_blank(),
plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm"))
# Extract legend
size_legend <- g_legend(data_plot + guides(legend.spacing.y = unit(0, "lines")))
par(mar=c(0,0,0,0))
data_plot_rus <- ggplot()+
coord_equal(xlim = c(0, 10), ylim = c(0, 10), expand = c(0,0))+
annotation_custom(ggplotGrob(data_plot + guides(
size = FALSE)),
xmin = 0, xmax = 10, ymin = 0, ymax = 10)+
annotation_custom(ggplotGrob(russia_plot),
xmin = 0, xmax = 3.5, ymin = 7, ymax = 9)+
annotation_custom(size_legend,
xmin = 7.5, xmax = 9, ymin = 1, ymax = 6.2)+
labs(x = NULL, y = NULL)+
theme_void()
# Сохраним рисунок
ggsave(plot = data_plot_rus, filename = "Fig_case_region_for_pres.jpeg", path = "plots/",
dpi = 200, device = "jpeg", width = 18, height = 17, units = "cm")
data_plot <- ggplot()+
geom_sf(data = st_as_sf(region), fill = "white", col = "black", lwd = 0.3)+
geom_sf(data = st_as_sf(roads_fixed), col = "grey30", lwd = 0.3)+
geom_point(data = df, aes(x = lon, y = lat, size = Census2002/1000),
pch = 21, col = "black", fill = "white", stroke = 0.7)+
geom_text(data = cities_labels_ru,
aes(x=lon-5000, y=lat+22000, label=label),
family = "Arial",
color = "red", fontface = "bold",
size=3, hjust="right", alpha = 1)+
scale_size_continuous(name = "Население,\nтыс. чел. (2002)", breaks = c(0.1, 1, 5, 20, 50, 100, 500),
range = c(0.3, 13), labels = c("<0.1", "0.1-1", "1-5", "5-20", "20-50", "50-100", "> 500"))+
scale_x_continuous(expand = c(.1, .1))+
coord_sf(crs = pulkovo1942.GK12, datum = NA)+
ggsn::scalebar(st_as_sf(region), dist = 50,
location = "bottomleft", dd2km = FALSE,
height = 0.01, st.size = 3)+
theme_minimal(base_family = "Arial", base_size = 12)+
theme(axis.title = element_blank(),
axis.text = element_blank(),
panel.grid = element_blank(),
plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm"))
# Extract legend
size_legend <- g_legend(data_plot + guides(legend.spacing.y = unit(0, "lines")))
par(mar=c(0,0,0,0))
data_plot_rus <- ggplot()+
coord_equal(xlim = c(0, 10), ylim = c(0, 10), expand = c(0,0))+
annotation_custom(ggplotGrob(data_plot + guides(
size = FALSE)),
xmin = 0, xmax = 10, ymin = 0, ymax = 10)+
annotation_custom(ggplotGrob(russia_plot),
xmin = 0, xmax = 3.5, ymin = 7, ymax = 9)+
annotation_custom(size_legend,
xmin = 7.5, xmax = 9, ymin = 1, ymax = 6.2)+
labs(x = NULL, y = NULL)+
theme_void()
# Сохраним рисунок
ggsave(plot = data_plot_rus, filename = "Fig_case_region_for_pres.jpeg", path = "plots/",
dpi = 200, device = "jpeg", width = 18, height = 17, units = "cm")
data_plot <- ggplot()+
geom_sf(data = st_as_sf(region), fill = "white", col = "black", lwd = 0.3)+
geom_sf(data = st_as_sf(roads_fixed), col = "grey30", lwd = 0.3)+
geom_point(data = df, aes(x = lon, y = lat, size = Census2002/1000),
pch = 21, col = "black", fill = "white", stroke = 0.7)+
geom_text(data = cities_labels_ru,
aes(x=lon-5000, y=lat+22000, label=label),
family = "Arial",
color = "red", fontface = "bold",
size=3, hjust="right", alpha = 1)+
scale_size_continuous(name = "Население,\nтыс. чел. (2002)", breaks = c(0.1, 1, 5, 20, 50, 100, 500),
range = c(0.3, 13), labels = c("<0.1", "1", "5", "20", "50", "100", ">500"))+
scale_x_continuous(expand = c(.1, .1))+
coord_sf(crs = pulkovo1942.GK12, datum = NA)+
ggsn::scalebar(st_as_sf(region), dist = 50,
location = "bottomleft", dd2km = FALSE,
height = 0.01, st.size = 3)+
theme_minimal(base_family = "Arial", base_size = 12)+
theme(axis.title = element_blank(),
axis.text = element_blank(),
panel.grid = element_blank(),
plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm"))
# Extract legend
size_legend <- g_legend(data_plot + guides(legend.spacing.y = unit(0, "lines")))
par(mar=c(0,0,0,0))
data_plot_rus <- ggplot()+
coord_equal(xlim = c(0, 10), ylim = c(0, 10), expand = c(0,0))+
annotation_custom(ggplotGrob(data_plot + guides(
size = FALSE)),
xmin = 0, xmax = 10, ymin = 0, ymax = 10)+
annotation_custom(ggplotGrob(russia_plot),
xmin = 0, xmax = 3.5, ymin = 7, ymax = 9)+
annotation_custom(size_legend,
xmin = 7.5, xmax = 9, ymin = 1, ymax = 6.2)+
labs(x = NULL, y = NULL)+
theme_void()
# Сохраним рисунок
ggsave(plot = data_plot_rus, filename = "Fig_case_region_for_pres.jpeg", path = "plots/",
dpi = 200, device = "jpeg", width = 18, height = 17, units = "cm")
library(sp)
library(sf)
library(raster)
library(rgdal)
library(dplyr)
library(ggplot2)
library(ggrepel)
library(gridExtra)
library(RColorBrewer)
library(ggdendro)
# load the data
load("data/Part1_output.RData")
# Define helper function to extract legend from ggplot object
# Source: https://stackoverflow.com/questions/12041042/how-to-plot-just-the-legends-in-ggplot2
g_legend<-function(a.gplot){
tmp <- ggplot_gtable(ggplot_build(a.gplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
legend
}
# Модель (Ward Hierarchical Clustering)
fit_2002 <- dist_matrix_2002 %>%
as.dist(diag = F) %>%
hclust(method="ward.D")
# Обрежем дерево 2002 года и извлечем номера кластеров
clust_3_2002 <- cutree(fit_2002, k=3)
clust_6_2002 <- cutree(fit_2002, k=6)
clust_18_2002 <- cutree(fit_2002, k = 18)
# Создадим таблицу с данными по н.п. для визуализации кластеров
settlements <- data_frame(id = settlements_2002@data$id,
Population = settlements_2002@data$Census2002,
clust_3 = clust_3_2002,
clust_6 = clust_6_2002,
clust_18 = clust_18_2002,
Lon = coordinates(settlements_2002)[,1],
Lat = coordinates(settlements_2002)[,2])
# ==========
# 3 кластера
cities_labels_ru <- data_frame(lon = c(12300298, 12450121, 12549841),
lat = c(6332398, 6440103, 6224085),
label = c("Тюмень", "Тобольск", "Ишим"))
clust_3_plot <-
ggplot()+
geom_sf(data = st_as_sf(region), col = "grey30", lwd = 0.4, alpha = 0)+
geom_sf(data = st_as_sf(roads_fixed), col = "grey40", lwd = 0.5, show.legend = F)+
geom_point(data = settlements, aes(x = Lon, y = Lat,
size = Population/1000,
col = factor(clust_3)), alpha = 0.6, show.legend = F)+
scale_colour_manual(values = brewer.pal(n = 3, name = "Dark2"))+
geom_text_repel(data = cities_labels_ru, aes(label = label, x = lon, y= lat),family = "Arial",
color = "black", direction = "x")+
annotate("text", x = 12900000, y = 6640000, label = "(б)", size = 5, family = "Arial")+
scale_size_continuous(breaks = c(0.1, 1, 5, 20, 50, 100, 500),
range = c(0.2, 10),
labels = c("<= 0.1", "1", "5", "20", "50", "100", ">= 500"))+
coord_sf(crs = pulkovo1942.GK12, datum = NA)+
theme_void(base_size = 12, base_family = "Arial")
# Сохраним рисунок
ggsave(plot = clust_3_plot, filename = "Clust_3.jpeg", path = "plots/",
dpi = 300, device = "jpeg", width = 18, height = 18, units = "cm")
# Сохраним рисунок
ggsave(plot = clust_3_plot, filename = "Clust_3.jpeg", path = "plots/",
dpi = 300, device = "jpeg", width = 15, height = 15, units = "cm")
# Сохраним рисунок
ggsave(plot = clust_3_plot, filename = "Clust_3.jpeg", path = "plots/",
dpi = 300, device = "jpeg", width = 13, height = 15, units = "cm")
# Сохраним рисунок
ggsave(plot = clust_3_plot, filename = "Clust_3.jpeg", path = "plots/",
dpi = 300, device = "jpeg", width = 15, height = 13, units = "cm")
# ===========
# 6 кластеров
settlements %>%
group_by(clust_6) %>% summarise(x_mean = mean(Lon), y_mean = mean(Lat)) -> cluster_6_notations
clust_6_plot <-
ggplot()+
geom_sf(data = st_as_sf(hydr_lines), col = "grey40", lwd = 0.3, alpha = 0.8)+
geom_sf(data = st_as_sf(hydr_polygons), fill = "grey40", alpha = 0.8, col = "grey", lwd = 0.4)+
geom_sf(data = st_as_sf(region), col = "grey30", lwd = 0.4, alpha = 0)+
geom_point(data = settlements, aes(x = Lon, y = Lat, size = Population/1000,
col = factor(clust_6)), alpha = 0.6, show.legend = F)+
geom_text(data = cluster_6_notations,
aes(label = clust_6, x = x_mean, y = y_mean),
family = "Arial",
color = "black")+
annotate("text", x = 12900000, y = 6640000, label = "(в)", size = 5, family = "Arial")+
scale_colour_manual(values = brewer.pal(n = 6, name = "Dark2"))+
scale_size_continuous(name = "Население,\nтыс. чел.", breaks = c(0.1, 1, 5, 20, 50, 100, 500),
range = c(0.2, 10),
labels = c("<= 0.1", "1", "5", "20", "50", "100", ">= 500"))+
coord_sf(crs = pulkovo1942.GK12, datum = NA)+
theme_void(base_size = 12, base_family = "Arial")
# Cохраним рисунок
ggsave(plot = clust_6_plot, filename = "Clust_6.jpeg", path = "plots/",
dpi = 300, device = "jpeg", width = 15, height = 13, units = "cm")
# Чтобы добавить номер кластера на карту, вычислим расположение географического центра
# для каждого кластера
settlements %>%
group_by(clust_18) %>% summarise(x_mean = mean(Lon), y_mean = mean(Lat)) -> cluster_18_notations
# Cохраним рисунок
ggsave(plot = clust_6_plot, filename = "Clust_6.jpeg", path = "plots/",
dpi = 300, device = "jpeg", width = 15, height = 13, units = "cm")
# # Сохраним рисунок
ggsave(plot = clust_18_plot, filename = "Clust_18.jpeg", path = "plots/",
dpi = 300, device = "jpeg", width = 15, height = 13, units = "cm")
clust_18_plot <- ggplot()+
geom_sf(data=st_as_sf(rayons), fill = "white", col = "grey40")+
geom_sf(data = st_as_sf(region), col = "grey30", lwd = 0.4, alpha = 0)+
geom_point(data = settlements, aes(x = Lon, y = Lat, size = Population/1000,
col = factor(clust_18)), show.legend = F, alpha = 0.6)+
geom_text(data = cluster_18_notations,
aes(label = clust_18, x = x_mean, y = y_mean),
family = "Arial",
color = "black")+
annotate("text", x = 12900000, y = 6640000, label = "(г)", size = 5, family = "Arial")+
scale_colour_manual(values = c(brewer.pal(n = 8, name = "Dark2"), brewer.pal(10, "Paired")))+
scale_size_continuous(name = "Население,\nтыс. чел.", breaks = c(0.1, 1, 5, 20, 50, 100, 500),
labels = c("<= 0.1", "1", "5", "20", "50", "100", ">= 500"),
range = c(0.2, 10))+
coord_sf(crs = pulkovo1942.GK12, datum = NA)+
theme_void(base_size = 12, base_family = "Arial")
# # Сохраним рисунок
ggsave(plot = clust_18_plot, filename = "Clust_18.jpeg", path = "plots/",
dpi = 300, device = "jpeg", width = 15, height = 13, units = "cm")
# Извлечем данные из модели и преобразуем в формат ggdendro
dendro_2002 <- as.dendrogram(fit_2002) %>% dendro_data(type = "rectangle")
# Извлечем информацию о принадлежности отдельных наблюдений к кластерам и создадим ключи,
# по которым будем красить сегменты дерева в ggplot
dendro_2002$label %>%
mutate(label = as.character(label) %>% as.integer()) %>%
arrange(label) %>%
mutate(clust_6 = clust_6_2002,
clust_18 = clust_18_2002) %>% arrange(x) -> key
key %>%
group_by(clust_18) %>%
summarise(min(x), max(x), mean(x)) -> keys_18
key %>%
group_by(clust_6) %>%
summarise(min(x), max(x), mean(x)) -> keys_6
# Создадим переменную с номером одного из 18 кластеров
segment(dendro_2002) %>%
mutate(clust_18 = NA_integer_) -> my_dendro
for(i in 1:18) {
my_dendro[my_dendro$y < 2550000 & my_dendro$x >= keys_18$`min(x)`[i] & my_dendro$x <= keys_18$`max(x)`[i], 5] <- i
}
# Лейблы 3 кластеров
labels <- data_frame(label = c("Ишим", "Тобольск", "Тюмень"),
x = c(188, 675, 1015),
y = rep(35000000, 3))
# Строим дендрограмму
dendrogram <-
my_dendro %>%
ggplot()+
geom_segment(aes(x=x, y=y , xend = xend, yend = yend, col = as.factor(clust_18)), show.legend = F)+
geom_rect(data = keys_6, aes(xmin=`min(x)`, xmax=`max(x)`, ymin=0, ymax=11000000),
col = "grey30", alpha = 0, lty = "dashed")+
geom_text(data = keys_6,
aes(label = clust_6, x = `max(x)` - 50, y = 9000000),
family = "Arial",
color = "grey30", fontface = "bold")+
geom_text_repel(data = labels, aes(label = label, x = x, y= y), angle = 90, direction = "x")+
annotate("text", x = 1300, y = 100000000, label = "(a)", size = 5, family = "Arial")+
scale_y_continuous(name = element_blank(), trans = "sqrt")+  # трансформируем шкалу y
scale_x_continuous(name = element_blank(), labels = 1:18, breaks = keys_18$`mean(x)`)+
scale_colour_manual(values = c(brewer.pal(n = 8, name = "Dark2"), brewer.pal(10, "Paired")), na.value = "black")+
theme_minimal(base_family = "Arial", base_size = 12)+
theme(panel.grid = element_blank(),
axis.ticks.x = element_line(),
# axis.line.x = element_line(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm"))
dendrogram
# Сохраним рисунок
ggsave(plot = dendrogram, filename = "Dendrogram2002.jpeg", path = "plots/",
dpi = 300, device = "jpeg", width = 18, height = 13, units = "cm")
raw_dendrogram <-
my_dendro %>%
ggplot()+
geom_segment(aes(x=x, y=y , xend = xend, yend = yend, col = as.factor(clust_18)), show.legend = F)+
scale_y_continuous(name = element_blank(), trans = "sqrt")+  # трансформируем шкалу y
theme_minimal(base_family = "Arial", base_size = 12)+
theme(panel.grid = element_blank(),
axis.ticks.x = element_line(),
# axis.line.x = element_line(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm"))
raw_dendrogram
# Покажем дерево без выделения кластеров
raw_dendrogram <-
my_dendro %>%
ggplot()+
geom_segment(aes(x=x, y=y , xend = xend, yend = yend), show.legend = F)+
scale_y_continuous(name = element_blank(), trans = "sqrt")+  # трансформируем шкалу y
theme_minimal(base_family = "Arial", base_size = 12)+
theme(panel.grid = element_blank(),
axis.ticks.x = element_line(),
# axis.line.x = element_line(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm"))
# Покажем дерево без выделения кластеров
raw_dendrogram <-
my_dendro %>%
ggplot()+
geom_segment(aes(x=x, y=y , xend = xend, yend = yend))+
scale_y_continuous(name = element_blank(), trans = "sqrt")+  # трансформируем шкалу y
theme_minimal(base_family = "Arial", base_size = 12)+
theme(panel.grid = element_blank(),
axis.ticks.x = element_line(),
# axis.line.x = element_line(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm"))
raw_dendrogram
# Покажем дерево без выделения кластеров
raw_dendrogram <-
my_dendro %>%
ggplot()+
geom_segment(aes(x=x, y=y , xend = xend, yend = yend))+
scale_y_continuous(name = element_blank(), trans = "sqrt")+  # трансформируем шкалу y
theme_minimal(base_family = "Arial", base_size = 12)+
theme(panel.grid = element_blank(),
axis.ticks.x = element_line(),
axis.title.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm"))
raw_dendrogram
# Покажем дерево без выделения кластеров
raw_dendrogram <-
my_dendro %>%
ggplot()+
geom_segment(aes(x=x, y=y , xend = xend, yend = yend))+
scale_y_continuous(name = element_blank(), trans = "sqrt")+  # трансформируем шкалу y
theme_minimal(base_family = "Arial", base_size = 12)+
theme(panel.grid = element_blank(),
axis.ticks.x = element_line(),
axis.title.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text = element_blank(),
plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm"))
raw_dendrogram
# Покажем дерево без выделения кластеров
raw_dendrogram <-
my_dendro %>%
ggplot()+
geom_segment(aes(x=x, y=y , xend = xend, yend = yend))+
scale_y_continuous(name = element_blank(), trans = "sqrt")+  # трансформируем шкалу y
theme_minimal(base_family = "Arial", base_size = 12)+
theme(panel.grid = element_blank(),
# axis.ticks.x = element_line(),
axis.title.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text = element_blank(),
plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm"))
raw_dendrogram
# Сохраним рисунок
ggsave(plot = raw_dendrogram, filename = "Raw_dendrogram2002.jpeg", path = "plots/",
dpi = 300, device = "jpeg", width = 18, height = 13, units = "cm")
